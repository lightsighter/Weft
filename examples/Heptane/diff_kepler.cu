/*
 * Copyright 2015 Stanford University and NVIDIA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Kepler tuned diffusion kernel for C7H16.
 * Gets 3 CTAs with 13 warps per CTA.
 * Should compile to 48 registers.
 * SM-latency limited.
 * Better than being L2-latency bound if you
 * go through constant cache.
 *
 * Launch with:
 *  dim3 grid((nx*ny*nz)/16,1,1);
 *  dim3 block(13*32,1,1);
 *
 * DON'T FORGET: cudaDeviceSetSharedMemConfig(cudaSharedMemBankSizeEightByte)
 *
 * gpu_diffusion<<<grid,block>>>(temperature_ptr, pressure_ptr, 
 *                 mole_frac_input_ptr, nx*ny, nx, nz, nx*ny*nz, output_d);
 *
 * Performance numbers on K20c with 13 SMs:
 * 
 * 32x32x32
 *   Latency: 4.196 ms
 *   Throughput: 7.810 Mpoints/s
 *   Perf: 351.4 GFLOPS
 *
 * 64x64x64
 *   Latency: 33.276 ms
 *   Throughput: 7.878 Mpoints/s
 *   Perf: 554.2 GFLOPS
 *
 * 128x128x128
 *   Latency: 265.900 ms
 *   Throughput: 7.887 Mpoints/s
 *   Perf: 554.8 GFLOPS
 *
 * Generation command:
 *   ./singe --dir inputs/nC7H16/ --cuda --diff 13 --warp 16 --k20
 *   Hand edited to remove loop and distribute loads.
 *
 */

#ifndef TOTAL_STEPS
#define TOTAL_STEPS 32
#endif

__constant__ double recip_molecular_masses[52] = {0.9920930186414277, 
  0.4960465093207139, 0.06250234383789392, 0.03125117191894696, 
  0.05879803873262004, 0.05550825019122593, 0.03570083414998991, 
  0.02272213442641948, 0.06651120780362699, 0.06233236489615739, 
  0.03029681486555637, 0.02939901936631002, 0.03330392596670473, 
  0.03325560390181349, 0.03564531203549703, 0.0344090165386938, 
  0.03995162657054838, 0.0384050534905585, 0.03120861932131863, 
  0.02378820504671527, 0.02437260645771706, 0.02269963076780593, 
  0.02495923532889907, 0.02495923532889907, 0.02376354135699802, 
  0.01848687856819865, 0.01814869186951308, 0.01782265601774851, 
  0.01750812771058645, 0.01752151203640269, 0.01721743223692151, 
  0.01446602711396394, 0.01425812481419881, 0.01405611369259448, 
  0.021261278576753, 0.02081519375927187, 0.01816307388956415, 
  0.01783652574443861, 0.02434671672351625, 0.02560336899370566, 
  0.01386813291662368, 0.01406473915042506, 0.01783652574443861, 
  0.01160970269292859, 0.01174717081138179, 9.979485172331238e-03, 
  0.01008088905376743, 7.622160364156333e-03, 6.127631204839358e-03, 
  8.757408658257278e-03, 6.840514699479429e-03, 0.03569720205330306}; 

__constant__ double diffusion_masses[52] = {1.00797, 2.01594, 15.9994, 31.9988, 
  17.00737, 18.01534, 28.01055, 44.00995, 15.03506, 16.04303, 33.00677, 
  34.01474, 30.02649, 30.07012, 28.05418, 29.06215, 25.03027, 26.03824, 
  32.04243, 42.03764, 41.02967, 44.05358, 40.06533, 40.06533, 42.08127, 
  54.09242, 55.10039, 56.10836, 57.11633, 57.0727, 58.08067, 69.12748000000001, 
  70.13545000000001, 71.14342000000001, 47.03386, 48.04183, 55.05676, 56.06473, 
  41.0733, 39.05736, 72.10776, 71.09979, 56.06473, 86.13485, 85.12688, 
  100.20557, 99.19760000000001, 131.1964, 163.1952, 114.18903, 146.18783, 
  28.0134}; 

__device__ const double across_coeffs[5824] = {6.07005636955586e-03, 
  -0.1386145161448153, 2.707818945836592, -11.27823930531106, 
  0.01274259093587177, -0.2926680862187829, 3.893331475844598, 
  -14.46349099620983, 0.01613119190705508, -0.3728785793781316, 
  4.526060936787678, -16.42636730227215, 8.921387876363899e-03, 
  -0.2043111094110479, 3.21271036899084, -14.43516047152531, 
  0.01277302505120672, -0.2933568018640708, 3.898513752624181, 
  -14.4779543967332, 6.709989444111375e-03, -0.153421897482575, 
  2.822369844918028, -13.04822501577877, 0.01287219707469157, 
  -0.3376036723887701, 4.593171151733713, -17.34880569712517, 
  0.01668800933097615, -0.4000865075599804, 4.857886405450124, 
  -18.76832767337158, 0.01675969348173545, -0.3846361249979026, 
  4.594529227576374, -16.6004524022483, 8.421269539825305e-03, 
  -0.192303679819131, 3.116694421364719, -14.21085374850775, 
  0.01631111894482831, -0.3970760847516223, 4.875734188702281, 
  -17.93437709809112, 0.01414740597208021, -0.3300325147218622, 
  4.22120640174638, -17.33506700696438, 0.01744492482303953, 
  -0.4076246855228118, 4.82905614638663, -17.42407339559932, 
  0.01014800539478876, -0.2339033058673573, 3.450818212071303, 
  -15.04882928157028, 0.01728295034331914, -0.403698343166343, 
  4.797318264425541, -17.32092542045278, 0.01003752809593942, 
  -0.2313023905779877, 3.430385256165832, -14.99361155646193, 
  0.01614843886042517, -0.3732731334199464, 4.529063238336419, 
  -16.43428980262436, 8.953335747600466e-03, -0.2050263467052026, 
  3.218028757404499, -14.45311028018079, 0.01616494282080296, 
  -0.3736506813214178, 4.531936050068589, -16.44186326872099, 
  8.984701805449817e-03, -0.2057285734515858, 3.223250560897271, 
  -14.47057247332107, 0.01082257879805209, -0.2949278232297451, 
  4.298374979557995, -17.03770565779608, 0.01631101644945535, 
  -0.3901557704464421, 4.769971326135041, -18.93305497580333, 
  0.01649213606317376, -0.403713121748136, 4.946150262622447, 
  -18.34446184390922, 0.01401006289649292, -0.3269333682056579, 
  4.198071191061252, -17.39540340510438, 0.01616002702773094, 
  -0.3914720819937988, 4.81585104903874, -17.64159342368206, 
  0.01336944844525558, -0.3117550178418557, 4.078249616720181, 
  -16.81258828816052, 0.01648940668175259, -0.4035915459347964, 
  4.944756899275299, -18.33939117197763, 0.01396088456434844, 
  -0.3257899228963624, 4.18922934013801, -17.36711512294028, 
  0.01544995741722749, -0.3794651739720996, 4.759847854951454, 
  -17.68071628552682, 0.01387007441274128, -0.3242258348053997, 
  4.181897552723494, -17.15793564741556, 0.01544541375242724, 
  -0.3794254511508813, 4.760056798991309, -17.68311509310161, 
  0.01391408523932538, -0.3252485141178312, 4.1897996052336, -17.18547199876029, 
  0.01093817248600197, -0.296719316524457, 4.304630717633641, 
  -17.04241262561012, 0.01613789593863038, -0.3858562626630013, 
  4.734161713269049, -18.85205143153762, 0.01066142594111403, 
  -0.2906041415410128, 4.257182232927045, -17.01763919802604, 
  0.01592202139895919, -0.3801589910299608, 4.683334650175035, 
  -18.83329662111954, 0.01605492906096749, -0.3754995684506969, 
  4.582328486605241, -16.33019827892464, 0.01086730873862738, 
  -0.2503916171527278, 3.576654621796225, -15.123529065566, 0.01062659297128495, 
  -0.2899162752672357, 4.252824759894023, -17.00924773273659, 
  0.01593220619723479, -0.3805248359154658, 4.687164844818441, 
  -18.85149796892453, 0.01354586702789, -0.3472357733317638, 4.607589052949854, 
  -17.74711708482682, 0.01538436767296208, -0.3626136226938619, 
  4.505016324496773, -18.31687082564888, 0.01354586702789, -0.3472357733317638, 
  4.607589052949854, -17.74711708482682, 0.01538436767296208, 
  -0.3626136226938619, 4.505016324496773, -18.31687082564888, 
  0.01392281557524954, -0.3529640979729814, 4.627618773587727, 
  -17.6852140880109, 0.01501113438505228, -0.3533595555080306, 
  4.428560006606044, -18.06616068494523, 0.01128820425565955, 
  -0.3035682058471521, 4.341268568286155, -17.38520166176037, 
  0.01588413120937565, -0.3769989529195602, 4.638719029127194, 
  -18.87907354144117, 0.01146803987495026, -0.3068819885136018, 
  4.360027053380294, -17.39576967908494, 0.01582248982557253, 
  -0.3754910363983166, 4.626423250939595, -18.82870581811314, 
  0.01145762838956716, -0.3066867586076895, 4.358885863023379, 
  -17.39384700950846, 0.01583637065440803, -0.3758495454233906, 
  4.629473540512518, -18.83903790739068, 0.01603961210296154, 
  -0.3811189800349848, 4.674349892624078, -19.11487907721562, 
  0.0161278365874757, -0.38704058420555, 4.752778748434771, -19.33023413824901, 
  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.831530229178146e-03, 
  -0.04069409605835214, 1.955039155206685, -9.780469094432837, 
  2.795390607818213e-03, -0.06501215286510499, 2.155935564682138, 
  -10.59937186463389, 5.292788909391028e-03, -0.1209962823601938, 
  2.573522524746874, -11.91485013159442, 0.01007917408273468, 
  -0.2323555654360706, 3.439258376743087, -15.49202177651173, 
  2.795311878055015e-03, -0.06501021068765825, 2.155919498210914, 
  -10.60237602288665, 8.859840042651536e-03, -0.2029332432454998, 
  3.202465246193662, -14.43059516365417, 0.01688049411673393, 
  -0.3967428195441058, 4.765096756884214, -17.55769760757197, 
  0.01745455510555758, -0.430169976219648, 5.195749765783188, 
  -20.35995016651012, 5.136360584657117e-03, -0.1173684712056846, 
  2.54522417288654, -11.8878798132339, 9.643409359213619e-03, 
  -0.2216960962204998, 3.352436079737641, -15.26983025986587, 
  0.01160270803702101, -0.2645840451207713, 3.66317526366357, -14.8335087756257, 
  0.01448007460870805, -0.3409100327767888, 4.332065595567145, 
  -18.16269156098646, 6.74522310723356e-03, -0.1533474644163446, 
  2.814310164589852, -12.60984961409305, 0.01204523332255568, 
  -0.2793353695025515, 3.813687188677732, -16.38044168538186, 
  6.621447543525716e-03, -0.1506071284541636, 2.794077954627578, 
  -12.5461517244027, 0.01183922015355889, -0.2745516182771348, 
  3.776635898498599, -16.29053037133515, 5.299663414797426e-03, 
  -0.1211474480990539, 2.574625651895275, -11.91831496013485, 
  0.01007996391839944, -0.2323734110936852, 3.439392352174992, 
  -15.50004291502803, 5.306182435286764e-03, -0.1212907981415695, 
  2.57567175619086, -11.92159536489396, 0.01008223653245205, -0.232424758905539, 
  3.439777844028267, -15.50833294214318, 0.01523750046743601, 
  -0.3551264057012359, 4.413095443907515, -16.89431885382482, 
  0.01719363908271478, -0.414715844742564, 4.995923831965781, 
  -20.05884180086192, 0.01220102287802632, -0.277979305267465, 
  3.762845438041857, -15.2354754878375, 0.0145021758224369, -0.3414936378826617, 
  4.337260530248074, -18.24730298780436, 0.01094167310178062, 
  -0.2497144509659547, 3.551936517323391, -14.46511464784045, 
  0.01421848106643789, -0.3345627430029221, 4.280747800790546, 
  -17.84097961116675, 0.01217861562298818, -0.2774786999185308, 
  3.759129586512917, -15.22541781847272, 0.01449598502506042, 
  -0.3413479240870884, 4.336120870665544, -18.23553582794667, 
  0.0120251932076417, -0.2744796606548115, 3.740525963010383, 
  -15.01550606313474, 0.01477501130932063, -0.3487286728863743, 
  4.400897711371161, -18.22123914386417, 0.01204942751895602, 
  -0.2750204227398973, 3.744534504652912, -15.02662786270632, 
  0.01477324265401361, -0.3486723145654258, 4.400342791355876, 
  -18.23055682387125, 0.01612104123767124, -0.373455618774532, 
  4.537529397721381, -17.17914855926564, 0.01713838302443, -0.4127426782723577, 
  4.974739689476374, -20.01135078489306, 0.01585412104488423, 
  -0.3664509276272117, 4.476625925659231, -17.10113986289785, 
  0.01676326848404254, -0.4026062358063881, 4.883645529899316, 
  -19.88811092341739, 7.121209254304696e-03, -0.1622028425828566, 
  2.88378954715211, -12.40828498810663, 0.01212663439193806, 
  -0.2813797553583489, 3.830927098692963, -16.32182119031236, 
  0.01587710797375491, -0.3669765045866935, 4.480623263191378, 
  -17.11211874331906, 0.01674927834103349, -0.402377904070954, 4.88263290894642, 
  -19.89717143000786, 0.01431338113313719, -0.3281436451379399, 
  4.15980880018118, -16.2935160545892, 0.01571641151604193, -0.3733284988525228, 
  4.614662871310468, -19.12438592149105, 0.01431338113313719, 
  -0.3281436451379399, 4.15980880018118, -16.2935160545892, 0.01571641151604193, 
  -0.3733284988525228, 4.614662871310468, -19.12438592149105, 
  0.01354937539718556, -0.310694987947511, 4.027076775059973, 
  -15.91343195684986, 0.01548932415920301, -0.3673303663669795, 
  4.562033025306415, -18.93833975652305, 0.01609890159858668, 
  -0.3689743538042209, 4.4706934941855, -17.20495324733379, 0.01639164241250889, 
  -0.3909174243131573, 4.766574596208835, -19.73304685740921, 
  0.01593749003031078, -0.3653030197101193, 4.442908465618515, 
  -17.11720743910764, 0.01635919138326361, -0.3900875084898815, 
  4.759496181751546, -19.69869261917766, 0.01594843281577179, 
  -0.3655500438269643, 4.444762525094158, -17.12206958158253, 
  0.01636079016736964, -0.3901696080829988, 4.760478508827247, 
  -19.7052429333174, 0.01633448321971819, -0.3898964393316811, 
  4.760870546039426, -19.85351236954241, 0.0165164669441436, 
  -0.3984440263757634, 4.863709773959997, -20.15078757338976, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 0.01668591762661101, -0.4000143819292453, 
  4.857154913388838, -18.78205560706603, 8.360700262427152e-03, 
  -0.1909630266095029, 3.106846575391895, -14.20664048632639, 
  0.01407004845883094, -0.328231571182103, 4.207261292181449, 
  -17.32207575338645, 0.0139487952631281, -0.3277089847275479, 
  4.222644581040134, -17.86545906839283, 0.01013038374081819, 
  -0.2335065688754916, 3.447849894456242, -15.05616308019808, 
  0.01153055589641775, -0.2666579691008834, 3.709667052589645, 
  -16.11964839645557, 0.01001503338196486, -0.2307950092941395, 
  3.426582051455392, -14.99939243741708, 0.0113828610988249, 
  -0.2631798456135265, 3.682343133532276, -16.05325609599981, 
  8.890835104032832e-03, -0.203627119671497, 3.207624486641297, 
  -14.44837171154892, 9.649697855128255e-03, -0.2218362356238396, 
  3.353472796328675, -15.27950845912205, 8.921387876363755e-03, 
  -0.2043111094110447, 3.212710368990817, -14.46570825051756, 
  9.657417257316836e-03, -0.2220082981316167, 3.354745993131588, 
  -15.28942768227944, 0.01632070830830463, -0.3902028447755962, 
  4.768951501861825, -18.9471923267252, 0.01701480084051232, 
  -0.4087604854475513, 4.934291267827721, -19.86846139605384, 
  0.01392245192265643, -0.3248964216081119, 4.182321022846665, 
  -17.37540477179135, 0.01392456872661931, -0.3272326798038054, 
  4.219762400388769, -17.93225889615509, 0.01330827123327063, 
  -0.3103322505256539, 4.067246084491885, -16.80407965419224, 
  0.01366183130589335, -0.3207070756276397, 4.165763551405682, 
  -17.53811600365551, 0.01387464400217716, -0.3237850863869338, 
  4.173729533158471, -17.34751317654655, 0.01391468068254476, 
  -0.3269982807618502, 4.217916017525624, -17.91923139805467, 
  0.01380503004302218, -0.3227149377196643, 4.170227503157337, 
  -17.1469232064959, 0.01431741407301717, -0.3370204436613317, 
  4.301113610456858, -17.95355868104626, 0.0138466184181859, -0.32368090214922, 
  4.177687887543875, -17.17362535103958, 0.01431740170718458, 
  -0.3370135329467013, 4.301007671460418, -17.96350158666704, 
  0.01614642893563057, -0.3858738857364965, 4.732892587358385, 
  -18.86596442507136, 0.01685181099078727, -0.4044610289117875, 
  4.896562991601122, -19.78089702808694, 0.01590851868031888, 
  -0.3796765476894065, 4.678297103306653, -18.83966666105025, 
  0.01662405449852008, -0.3976165094381263, 4.830034924453829, 
  -19.71174914824316, 0.01081043778498633, -0.2491088600361257, 
  3.567040524136709, -15.12182420038743, 0.01134335000213215, 
  -0.2630919253085229, 3.688369770475481, -15.96842480355948, 
  0.01591889218855689, -0.380046918320627, 4.682163022708305, 
  -18.85824629236493, 0.01661697331268886, -0.3975477504830696, 
  4.830245432257528, -19.72312641025728, 0.01531231602001087, 
  -0.3608755599586282, 4.491091880113276, -18.30228299632415, 
  0.01559412723601299, -0.368999744237374, 4.568447795048298, 
  -18.97240836667947, 0.01531231602001087, -0.3608755599586282, 
  4.491091880113276, -18.30228299632415, 0.01559412723601299, 
  -0.368999744237374, 4.568447795048298, -18.97240836667947, 
  0.01494257373538834, -0.3517095935412156, 4.41536905469408, 
  -18.05386107251976, 0.01530632806449638, -0.3617460243743219, 
  4.507349031524173, -18.76802243017728, 0.0158354886623282, 
  -0.3757428156802451, 4.628033332232552, -18.87338446602391, 
  0.01581483876285919, -0.3765438608738398, 4.646747491105296, 
  -19.3947225691539, 0.01577506891328646, -0.374266640907845, 4.616008643941134, 
  -18.82385909114426, 0.01579146967684098, -0.3759195746190456, 
  4.64122304484001, -19.3644110970297, 0.01578923910589939, -0.3746324503282895, 
  4.619119719296429, -18.83445176005826, 0.01579471325891119, 
  -0.3760357595576774, 4.642437453840363, -19.37120256597766, 
  0.01598463842380939, -0.3797028265003652, 4.662325971047792, 
  -19.10588942956311, 0.01580068610169597, -0.3764635643267326, 
  4.647880977633112, -19.52811775496816, 0.01611130716582129, 
  -0.3864545437919397, 4.746679790526477, -19.33511501955221, 
  0.01650950215247892, -0.3963705620010037, 4.831372629906778, 
  -20.01529747552541, 0.01607978232481002, -0.3854677277501663, 
  4.73707777882417, -19.25569672269431, 0.01698283866253878, 
  -0.4088212743935661, 4.940311525980474, -20.28809146923647, 
  0.01695810061222789, -0.4046275158932987, 4.874093647969457, 
  -19.78168801790867, 0.01610947967208507, -0.3866122159977436, 
  4.751174545998796, -19.94712569816581, 0.01640315632127065, 
  -0.3925608242665184, 4.789779763477605, -20.03209430873462, 
  0.0164537475781556, -0.3962894708520976, 4.840341543110246, 
  -20.13723136987955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  -9.33483203904454e-03, 0.1084601151042944, 1.821581516965298, 
  -13.89549333395046, 0.01764084997621012, -0.4322029071799307, 
  5.191769085446127, -20.32392645516661, 0.01164017599915519, 
  -0.3241223645618151, 4.629821098889612, -19.85728671201996, 
  0.01729970449480201, -0.4195974201745907, 5.054421005617321, 
  -20.58404830795746, 0.01735457170668762, -0.429062142555344, 
  5.198757632092133, -20.37068017814066, 0.01580966944526371, 
  -0.3766528327178619, 4.649413507342154, -18.95394067620875, 
  0.01701554653474726, -0.427501766788619, 5.241148441060389, 
  -20.63496923456497, 0.0157324872446341, -0.3745019823118549, 
  4.629792472380002, -18.90371920840627, 0.01660709881284158, 
  -0.4064268235827433, 4.976348427553561, -19.69598729761744, 
  0.01446571456849159, -0.3405648633164163, 4.32931046965254, 
  -18.16446555205686, 0.01656592770094802, -0.4056065433966818, 
  4.971088916895506, -19.69030616806491, 0.01445265690201578, 
  -0.340251272783731, 4.326809510347545, -18.16652247631266, 
  6.910754370567942e-03, -0.2297460843463133, 4.047886904675388, 
  -18.77227536564263, 0.01595059576271076, -0.4084959206563935, 
  5.14524364965509, -21.23731204183873, 0.01354540636774852, 
  -0.3607076275059714, 4.846168465029066, -20.33778278761968, 
  0.01721749445888508, -0.4183315265273768, 5.049924377298788, 
  -20.63354713205149, 0.01481622886271484, -0.3868332122718936, 
  5.019193243674478, -20.42575383698335, 0.01717060983974377, 
  -0.4167983091243726, 5.033812436094497, -20.33124391633331, 
  0.01365880595701911, -0.3631072570632005, 4.862763448932674, 
  -20.36898849499574, 0.0172011961109357, -0.4180120240551465, 
  5.047920233921075, -20.61929443894634, 0.01413396552047578, 
  -0.3745882846315332, 4.956732254764512, -20.41939706835304, 
  0.0170982062923231, -0.4179905892999281, 5.067571354478464, 
  -20.52166636541185, 0.01404560508611644, -0.3727109045646714, 
  4.943696635011682, -20.39786449913723, 0.01713580608278282, 
  -0.4187351037255866, 5.07231030652994, -20.54393201945869, 
  7.202705727107518e-03, -0.2355816523338849, 4.08415097410572, 
  -18.85787293762389, 0.01609794402135782, -0.4109315049705172, 
  5.155016649927838, -21.2613573280374, 7.887252769827987e-03, 
  -0.2484043778150136, 4.156437302528998, -19.10426689200489, 
  0.0167110191194619, -0.421456470012777, 5.204081026190214, -21.45141963711672, 
  0.01661362642068862, -0.4146647493928503, 5.110776266890758, 
  -19.96770408049936, 0.01605422649898353, -0.3818039668840406, 
  4.685671622332194, -18.989307666985, 7.785556715053307e-03, 
  -0.2461557948460157, 4.140293792446795, -19.07332453119833, 
  0.0167059581814662, -0.4213533488528203, 5.203397576208643, 
  -21.46177892877124, 0.01057457113514126, -0.3020027266810234, 
  4.486538050200457, -19.74944428937879, 0.01756348801971916, 
  -0.4325902579838207, 5.214511550538329, -21.30286089973223, 
  0.01057457113514126, -0.3020027266810234, 4.486538050200457, 
  -19.74944428937879, 0.01756348801971916, -0.4325902579838207, 
  5.214511550538329, -21.30286089973223, 0.01098999470116892, 
  -0.3101133151488093, 4.534438393181332, -19.7849102303083, 
  0.01766425523036946, -0.4333404744819977, 5.206729307960867, 
  -21.21490633120592, 7.965249078703216e-03, -0.2474021974033382, 
  4.119380111177888, -19.13550305456974, 0.01702047959144326, 
  -0.4234957421490746, 5.174136180136413, -21.46745049557546, 
  8.104074443753873e-03, -0.2502862734192128, 4.13864985577035, 
  -19.15893528693336, 0.01703706956334631, -0.4237113386280675, 
  5.174345649373926, -21.45089817650435, 8.0401452610993e-03, 
  -0.2489050963716939, 4.128912900404218, -19.1386582607522, 0.0170154559906154, 
  -0.4232681438919013, 5.17139014024596, -21.44845383360435, 
  7.079572682538857e-03, -0.2279893320822776, 3.979939154900678, 
  -18.94690338451728, 0.01682922956374606, -0.4192603373936929, 
  5.142808870185134, -21.51866996235815, 6.215832111283265e-03, 
  -0.2114205932335253, 3.890704073493253, -18.77543891309435, 
  0.01627033535421498, -0.412275665790533, 5.141612402658641, 
  -21.60191308940338, -6.151074762620318e-04, -0.06907062101170626, 
  2.944920714088519, -16.78684517320129, 0.01607727755002233, 
  -0.4102507265696401, 5.147308677009384, -21.63579619558683, 
  5.171727807838482e-03, -0.1877606466846136, 3.710932601008784, 
  -18.47544139195373, 0.01586622994882493, -0.4018245546403158, 
  5.050122755846782, -21.49492335340391, 0.01597799041336903, 
  -0.4036194564939151, 5.057087159030743, -21.50004665838649, 
  0.01568594779720081, -0.400396935600054, 5.063723473465418, 
  -21.52526332132286, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01321880441713106, -0.3087877565164844, 4.059922339153419, 
  -17.03001828586137, 0.01207081207770948, -0.2799206847408843, 
  3.818140436800444, -16.39640493836528, 0.01209605931678694, 
  -0.2804984120532662, 3.822535976244451, -16.41197857009664, 
  0.01007991712380258, -0.2323723538097526, 3.439384414662892, 
  -15.51530095312904, 0.01715818067660215, -0.4220341222783548, 
  5.121814136477569, -20.47712385674381, 0.01719034494033623, 
  -0.4146435052855548, 4.995401883323805, -20.06505368292892, 
  0.01589306961189147, -0.378321596211233, 4.660414426231291, -19.0745157959873, 
  0.01449648942223847, -0.3413597517262509, 4.336213033087439, 
  -18.25208392961771, 0.01565526995273918, -0.3718479656468177, 
  4.602545952783058, -18.67007042462373, 0.0142212337471414, 
  -0.3346334211163204, 4.281346560139111, -17.84979178214784, 
  0.01588925588098818, -0.3781643944102411, 4.658667638470059, 
  -19.06319895717979, 0.01449151413682074, -0.3412436281343895, 
  4.335312398253965, -18.24081104390627, 0.01633250070006451, 
  -0.3887713413805569, 4.743966957420243, -19.11400224100345, 
  0.01477708216794929, -0.3487908434909765, 4.401487927020719, 
  -18.22971622933984, 0.01633427028282966, -0.3888737681631399, 
  4.745232531972796, -19.12554850249077, 0.01477454934610693, 
  -0.3487144154783505, 4.400759989723843, -18.23870905144469, 
  0.01704950364527847, -0.4189641476216954, 5.09316962577677, 
  -20.40588650645331, 0.01713809401768258, -0.4127275834757476, 
  4.974561007195388, -20.0184662335405, 0.01643255045514843, 
  -0.4039294395812847, 4.969374097795065, -20.18068778907963, 
  0.01677155513370917, -0.4027400483552252, 4.884223411777492, 
  -19.89732755516938, 0.01383501224392339, -0.3235770511912988, 
  4.178297354934524, -17.16140303541574, 0.01212642805755796, 
  -0.2813759398720815, 3.830906019290594, -16.33044108170133, 
  0.01637604328193411, -0.4028179506453952, 4.962367909860379, 
  -20.17248524617889, 0.01675873663474652, -0.4025325596178483, 
  4.883321908702023, -19.90673822758287, 0.01642913503056386, 
  -0.3968195037438198, 4.854332194457681, -19.76399019948327, 
  0.01571229757829891, -0.3731965095614887, 4.613361678000265, 
  -19.12905147212374, 0.01642913503056386, -0.3968195037438198, 
  4.854332194457681, -19.76399019948327, 0.01571229757829891, 
  -0.3731965095614887, 4.613361678000265, -19.12905147212374, 0.016566791771393, 
  -0.3985682829111299, 4.855610088215969, -19.69766732161566, 
  0.01548475535313527, -0.3671884356977242, 4.560659283526312, 
  -18.94302112654486, 0.01616574155833733, -0.3945011715061152, 
  4.867800629536638, -20.02858673479397, 0.01638903905461283, 
  -0.3907805565172365, 4.764925995552451, -19.73728180315577, 
  0.01640741337330543, -0.39978972985857, 4.90569210082873, -20.10213093758445, 
  0.0163564353164654, -0.3899480326545737, 4.757834617546608, 
  -19.70297762417581, 0.01639404718792211, -0.3995482093658101, 
  4.904364877695977, -20.10187911290602, 0.01635804937423717, 
  -0.3900293986200199, 4.758802785701546, -19.70953907794862, 
  0.01619199393385088, -0.395670437644138, 4.880657919719122, 
  -20.19046470985488, 0.01633094448062505, -0.389724484285713, 
  4.758846828537162, -19.85676975637258, 0.0156187731753363, 
  -0.3879001160103509, 4.868111443019171, -20.22645445581366, 0.016535583992092, 
  -0.3987673037287297, 4.865265150661589, -20.16255063947253, 
  0.01570160430623603, -0.3895010367429669, 4.877928324133196, 
  -20.20108781771009, 0.0165516217923302, -0.3989992074951558, 
  4.865950612918831, -20.11672189237333, 0.01550804417950935, 
  -0.3845835307300003, 4.834773401772323, -20.25519575415504, 
  0.01641787835996447, -0.3951747892706681, 4.829357259183674, 
  -20.20513713814782, 0.01551558257227986, -0.3841006350981409, 
  4.825477262810608, -20.22111168154699, 0.01633846745483864, 
  -0.3928799967382184, 4.807780655398406, -20.14555329995413, 
  0.01522410891699613, -0.3805013361848128, 4.825065510747307, 
  -20.21389874197248, 0.01640020063460258, -0.3969922621677952, 
  4.862409196846494, -20.26242147293754, 0.01654946717893066, 
  -0.4089530608460207, 5.028482240506469, -20.32361999739216, 
  0.01705354348533593, -0.4112426600276087, 4.966807181204015, 
  -20.09513423428173, 0.01652163227336141, -0.4083954244396528, 
  5.024876180879132, -20.31858219356591, 0.01704370814761795, 
  -0.4110625617806953, 4.965793395302903, -20.09773712527875, 
  0.01673090969668389, -0.4028498029330532, 4.893519312026707, 
  -20.03791750065399, 0.01646336132536909, -0.396822471224794, 
  4.847934729925114, -20.1302262415562, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.0131315953184243, -0.3066166965649867, 4.041887048949802, 
  -16.98075564668688, 0.01186365501719549, -0.2751110196872465, 
  3.780893962376286, -16.30623071604027, 0.01188789947902094, 
  -0.2756660590352941, 3.785118834013713, -16.3215933194294, 
  0.01007917408273468, -0.2323555654360708, 3.43925837674309, 
  -15.52256955550405, 0.01720920108952341, -0.4225656611083872, 
  5.120422993080004, -20.46370934997472, 0.01718585478646967, 
  -0.414548640277745, 4.994747059355336, -20.07068063413586, 
  0.01576282679035721, -0.3749876557311663, 4.632025977615272, 
  -19.00118334292851, 0.01449203079261617, -0.3412556176695198, 
  4.335404846175962, -18.25715078272178, 0.01557024243090788, 
  -0.3695566869856171, 4.582158567721829, -18.61500124453871, 
  0.01422490421180513, -0.3347262495405725, 4.282122813529883, 
  -17.85873551167774, 0.01575853936167338, -0.3748225999616132, 
  4.630242868269995, -18.98957902935655, 0.01448822532630328, 
  -0.3411679695783523, 4.334734214366366, -18.24635268323822, 
  0.01622116183455018, -0.3858711662773179, 4.718881412613837, 
  -19.04639891568322, 0.01477964728190152, -0.3488657576172812, 
  4.402186350194766, -18.23817188693664, 0.01622350028625094, -0.38598113103593, 
  4.720161255179485, -19.05818601553772, 0.01477639231330114, 
  -0.3487703671510942, 4.401294963551501, -18.24686109446793, 
  0.01707700726715722, -0.4189819968814562, 5.088071681356532, 
  -20.38421250782186, 0.01713657716012666, -0.4126895083150966, 
  4.974248208640644, -20.02499076044333, 0.01649825032508801, 
  -0.4047583110746319, 4.970001580928516, -20.1749959910552, 0.0167788224067446, 
  -0.4028561467991169, 4.884711037156958, -19.90604117506926, 
  0.01370759411515023, -0.3204798001375239, 4.153160465331435, 
  -17.09848012502269, 0.01212783796933372, -0.2814090240116193, 
  3.831164979909937, -16.3393812735233, 0.01644260645724562, 
  -0.4036667447009868, 4.963148465676626, -20.16747478904044, 
  0.01676717573148206, -0.402669491009408, 4.883920471476373, 
  -19.91579668013632, 0.01637709396823283, -0.3951036028436912, 
  4.836858847064875, -19.71634536735863, 0.01570841796473832, 
  -0.3730738362381931, 4.612162515902694, -19.13366867135069, 
  0.01637709396823283, -0.3951036028436912, 4.836858847064875, 
  -19.71634536735863, 0.01570841796473832, -0.3730738362381931, 
  4.612162515902694, -19.13366867135069, 0.01653272530089169, 
  -0.3972786540706439, 4.841524582948862, -19.65909949171371, 
  0.01548047004729858, -0.3670566777557606, 4.55939201590338, 
  -18.94765540310774, 0.01641104770491699, -0.3994649051521627, 
  4.899804448022491, -20.10396634986296, 0.01638648578225371, 
  -0.3906491387841773, 4.763352784531854, -19.74138021666472, 
  0.01640334226005321, -0.3991319550995436, 4.895949654019199, 
  -20.07562122826956, 0.01635373841746988, -0.3898140922669797, 
  4.756248133000286, -19.70712166737091, 0.01639013750363669, 
  -0.3988953985668193, 4.894670303283915, -20.07561137545045, 
  0.01635536637731798, -0.3898946417490822, 4.757201110104612, 
  -19.71368932867534, 0.0161884437736153, -0.3950229667388721, 4.87098240669127, 
  -20.16513625122151, 0.01632749676980107, -0.3895590416144437, 
  4.756907599476815, -19.85991109932925, 0.01570963571595495, 
  -0.3892803603975411, 4.872743565747826, -20.23360515916189, 
  0.01655366706615776, -0.3990726342411552, 4.866729372095969, 
  -20.17378281146414, 0.0162678699898062, -0.4038332568343881, 4.99953176186038, 
  -20.5580965345489, 0.01656895661577248, -0.3992919947155104, 
  4.867355647701617, -20.12794775600493, 0.01557036241785001, 
  -0.3853705363402627, 4.835392218932953, -20.25532288145769, 
  0.0164287669615499, -0.3953027864656637, 4.829374438594646, 
  -20.21319697694642, 0.01557481460804034, -0.3848593478278757, 
  4.826251772699893, -20.22281553793163, 0.0163479955441661, 
  -0.3929788334764971, 4.807590949541267, -20.15317923682083, 
  0.01526194939846748, -0.3807263106170647, 4.821356595300505, 
  -20.20239684545858, 0.01642237751297191, -0.3973724119743953, 
  4.864292493183614, -20.27511409761879, 0.01658997234800819, 
  -0.4092505242587581, 5.025369374436823, -20.30912259559294, 
  0.01706666954460961, -0.4114824364402946, 4.968151372685199, 
  -20.10621098760663, 0.01656229401346591, -0.4086970651323669, 
  5.021799970187462, -20.30431485691243, 0.01705751918372414, 
  -0.4113153608217047, 4.96721546926101, -20.10903853192736, 
  0.01674545604349204, -0.4030970998312357, 4.894724080394789, 
  -20.04877822325141, 0.01648089011479912, -0.3971152368681969, 
  4.849303999431109, -20.14116083019069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.0160824459711457, -0.4115948187104039, 5.169718553095167, -21.3717825801774, 
  0.01621049892140718, -0.4135367185300914, 5.175216431524073, 
  -21.10874358956544, 0.01609595632937072, -0.4118806697459564, 
  5.171694161400579, -21.3676714872385, 0.01724379457290338, 
  -0.4182806980232594, 5.043971320570828, -20.42179100211819, 
  0.01581766120282784, -0.4074088260250763, 5.155195237885478, 
  -21.18097126925897, 0.01731636506141159, -0.4215289000573458, 
  5.082470138596807, -20.35987388255274, 0.01583927783790541, 
  -0.4078626265861648, 5.158306119994752, -21.19863611647373, 
  0.01732003782592365, -0.4216017839735472, 5.082935498659231, 
  -20.3711724775466, 0.01007578454898659, -0.2959242537276966, 
  4.490130810468909, -20.14729660541763, 0.01636802560960142, 
  -0.4160734149797383, 5.185082686019458, -21.12859293218487, 
  0.01108002350194283, -0.3158456691166735, 4.613101244022373, 
  -20.51393066233911, 0.01634560841124899, -0.4133123637232479, 
  5.143462330075219, -21.10389256882559, 0.01758007377647672, 
  -0.4314581640128936, 5.192707474033726, -20.55019664014986, 
  0.01585683649879915, -0.3766919821142446, 4.641767970618347, 
  -18.65526108882975, 0.01102095671939833, -0.314563541772597, 
  4.604025425982943, -20.50251209112755, 0.01626714657134633, 
  -0.4116826117427828, 5.132422861498569, -21.08862290657069, 
  0.01407695858430121, -0.3745934916298091, 4.969198484773308, 
  -21.18298787084928, 0.01724939124162139, -0.4256786016924421, 
  5.163735092674849, -20.98693744838206, 0.01407695858430121, 
  -0.3745934916298091, 4.969198484773308, -21.18298787084928, 
  0.01724939124162139, -0.4256786016924421, 5.163735092674849, 
  -20.98693744838206, 0.01445427391298864, -0.381616227609422, 
  5.007645316565219, -21.20136472393608, 0.01730496784843275, 
  -0.4256210397069541, 5.151382986730087, -20.88683410839904, 
  0.01238367616269781, -0.3401618097277447, 4.746521588668378, 
  -20.90877603152553, 0.01616949894903597, -0.4055425481184389, 
  5.049465955863293, -20.97659542411547, 0.01245196730502934, 
  -0.3415109332155899, 4.754869450484036, -20.91003249379277, 
  0.01619781238035354, -0.4060047689159547, 5.051381824186695, 
  -20.96240466572521, 0.01240720049303275, -0.3405528247502091, 
  4.748170540123651, -20.89784788796089, 0.01615813862961812, 
  -0.4051917210145566, 5.045965431652548, -20.95364098058331, 
  0.01205510174406379, -0.3328467999350976, 4.692658193529471, 
  -20.90554405029134, 0.01577932632256064, -0.3972517396772596, 
  4.99134321400285, -20.97087991675996, 0.01015499444139061, 
  -0.2957387240387239, 4.470535263940921, -20.46321658643152, 
  0.01515619318563842, -0.3885682993380857, 4.975514609231078, 
  -21.01079150082659, 0.01024348003693838, -0.2976459238416575, 
  4.483909871026483, -20.44930672125932, 0.01526085977205717, 
  -0.3907279108665164, 4.989996016190124, -20.99729229154727, 
  0.01035648224127195, -0.298378831767386, 4.472361387612806, 
  -20.56719845329079, 0.0144662996132148, -0.3724419088271281, 
  4.847814224959754, -20.82348900079813, 0.01068507683151024, 
  -0.3048785175203855, 4.512671306138525, -20.64823318269886, 
  0.01460671963014332, -0.3748436501397783, 4.858982603890324, 
  -20.83747025500166, 9.636475282871289e-03, -0.2844819731743026, 
  4.392009191181106, -20.36608347616921, 0.01429295152706885, 
  -0.3708944780110698, 4.858355364984442, -20.83690379938356, 
  9.821244844788121e-03, -0.2903383775980356, 4.450248899064439, 
  -20.13790663999501, 0.01589610395619445, -0.4062235836610379, 
  5.117980073548721, -21.05921132710157, 9.79788073015902e-03, 
  -0.2898256760712687, 4.446588516130056, -20.13346477576067, 
  0.01585878767475613, -0.4054441386049211, 5.112665757097407, 
  -21.05126226871441, 0.01058919288075066, -0.3053698112106246, 
  4.541361092069004, -20.44993529894095, 0.01566581389125842, 
  -0.3995734102634464, 5.054147733768046, -21.00896335931184, 
  0.01038884497034325, -0.3004870415847439, 4.501201888366065, 
  -20.54286273295784, 0.01520613766735047, -0.3892518241911986, 
  4.976666514170823, -21.02080286670316, 0.01436170865164514, 
  -0.380092948868388, 5.001970257312586, -21.22397392013534, 
  0.01729442369655615, -0.4259283146666218, 5.158864904012535, 
  -20.93978117956987, 0.01411313797298908, -0.3753646887154276, 
  4.974569694664378, -21.18976311457301, 0.01728218717695523, 
  -0.4263446255834947, 5.168121495191039, -20.99108415779216, 
  0.01413128275192716, -0.3684919524763171, 4.852323702891524, 
  -20.85840503963358, 0.01371968865245442, -0.3596131871866027, 
  4.788151436555748, -20.78992482260817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01728091191611825, -0.4199121823878849, 5.063210306638652, 
  -20.72636230820634, 0.01723054743894524, -0.4180214691531642, 
  5.042350562216534, -20.4268276431636, 0.0172798268412014, -0.4198908635740692, 
  5.063076146223465, -20.71749322218402, 0.01728091191611814, 
  -0.4199121823878823, 5.063210306638634, -20.70931463449802, 
  0.01734399221390631, -0.4233251088389673, 5.106102353060868, 
  -20.6902202658523, 0.01736406725919864, -0.423723568857678, 5.108647128748713, 
  -20.68767401192844, 0.01736702591787965, -0.4237822997819469, 
  5.109022263447192, -20.70694347365182, 0.01738439679991153, 
  -0.4241271620002799, 5.111225350350467, -20.70352379815515, 
  0.01616755212024519, -0.4127274982932964, 5.170593568687386, 
  -21.37213682815873, 0.01617226127465672, -0.4128281394282001, 
  5.171296538896006, -21.36488053147545, 0.01651054201838409, 
  -0.4176322816496668, 5.181500479273592, -21.45776611198869, 
  0.01647715038589955, -0.4169383561083498, 5.17679532864877, 
  -21.43729588657454, 0.01614058977635213, -0.3838564269605939, 
  4.702083328551584, -19.11338635152571, 0.01613918485742842, 
  -0.3838100637518279, 4.70161831948448, -19.10207040827079, 
  0.01646382219029345, -0.4166613314766477, 5.174916629504257, 
  -21.45276091111354, 0.01642599056229474, -0.4158748941930296, 
  5.169582417239979, -21.43069517952392, 0.01742266501452855, 
  -0.4300540641789726, 5.200988727052906, -21.32648242088629, 
  0.0173957413701029, -0.4295063240700419, 5.197371516423816, 
  -21.30886769068836, 0.01742266501452855, -0.4300540641789726, 
  5.200988727052906, -21.32648242088629, 0.0173957413701029, 
  -0.4295063240700419, 5.197371516423816, -21.30886769068836, 
  0.01754607076050203, -0.4313165671135697, 5.197060342185416, 
  -21.24830723121123, 0.01751969675184947, -0.4307818665385664, 
  5.193546577481027, -21.23075710702035, 0.01663133284332378, 
  -0.4158251632190333, 5.12602408669236, -21.39382706394728, 0.0165733065929936, 
  -0.4146334511462736, 5.11806036109967, -21.36538443356199, 
  0.01664649537693854, -0.4160134101526945, 5.126070774760208, 
  -21.37720758585069, 0.01658908511124615, -0.4148347003639605, 
  5.118197183998653, -21.34889875911949, 0.01661616898425517, 
  -0.415390775366544, 5.121911723562909, -21.37129627031387, 
  0.01655793553343058, -0.4141951357519212, 5.113924838533432, 
  -21.3426692396001, 0.01638742324120003, -0.4105079422293876, 
  5.087470869715972, -21.41929629592889, 0.01631985447134962, 
  -0.4091210298823165, 5.078210596400279, -21.38782855109919, 
  0.01576855815969175, -0.4021694184874884, 5.076276199568571, 
  -21.48402579728161, 0.01569575841853615, -0.4006543591308457, 
  5.06598793537692, -21.44988590897719, 0.01582386838511236, 
  -0.4033051257370713, 5.083835335195169, -21.45982227075635, 
  0.01575389440829169, -0.4018489514184421, 5.073947532341984, 
  -21.42650860897863, 0.01530264599783095, -0.3904620431316593, 
  4.976451881644243, -21.34203611201012, 0.01521826602937207, 
  -0.3887156083200314, 4.964670081638256, -21.3040489827912, 
  0.01541881424146324, -0.3923197888255218, 4.98356028707164, 
  -21.34551712351804, 0.01533624986486522, -0.3906129977299633, 
  4.972065146289983, -21.30816163566939, 0.01509157103214046, 
  -0.3883453527772476, 4.985010810271467, -21.36487838043697, 
  0.01500806072121435, -0.3866061458494272, 4.973190172733561, 
  -21.32648832970752, 0.01598504391751971, -0.4089269305841637, 
  5.144753190042587, -21.39830189664127, 0.0159465605601966, 
  -0.4081227453284618, 5.139265173811389, -21.37554675376485, 
  0.01596146774785603, -0.4084342807351902, 5.141391336695744, 
  -21.39488352976494, 0.01592112538849797, -0.4075911407090417, 
  5.135636715952235, -21.37144430155936, 0.01602460663312088, 
  -0.4079042850563019, 5.119196096457801, -21.42056567046791, 
  0.01596616920441457, -0.4066876534577487, 5.110929148086637, 
  -21.39105106220375, 0.01584110434026938, -0.4033208697130823, 
  5.080575603338753, -21.49862302916783, 0.0157685726517393, 
  -0.4018123153278907, 5.070340079048853, -21.46469109021806, 
  0.0174966747450147, -0.4309350272689174, 5.200656712080669, 
  -21.29206306609996, 0.01746990066218321, -0.4303912805774286, 
  5.197074719566102, -21.27444403347765, 0.01744095772987928, 
  -0.4304261469600382, 5.203445373654941, -21.3262799468548, 
  0.01741612296370023, -0.4299209811497802, 5.200109940740351, 
  -21.30938106406178, 0.01481217285226436, -0.3835755766513421, 
  4.963529635367723, -21.34236002561557, 0.01474162594927425, 
  -0.3815802158929216, 4.94484523480073, -21.36420019687973, 0.0, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.01760474038249054, -0.4304585017265122, 
  5.171194274545642, -20.69804346667955, 0.01582687921208601, 
  -0.4070138228634493, 5.146095114550874, -21.15940038673656, 
  0.0158102699778221, -0.4045862064931449, 5.108352940103648, 
  -21.14050943165389, 0.01167485409292585, -0.3280387074915069, 
  4.692948337662716, -20.70240657205738, 0.01634049332145563, 
  -0.3895570101586471, 4.755379660841312, -19.0356487066321, 
  0.01754577869412256, -0.4299902710345507, 5.175219639602314, 
  -20.51417420477715, 0.01572328673732381, -0.4027681783570604, 
  5.095948004522738, -21.12135925381011, 0.01162512412216562, 
  -0.3269606316481798, 4.685327786679427, -20.69475870099992, 
  0.0168211807272469, -0.4191635912463466, 5.142836629285284, 
  -21.04858992269213, 0.0145283357739639, -0.383528029997166, 5.024756419629281, 
  -21.3116407623462, 0.0168211807272469, -0.4191635912463466, 5.142836629285284, 
  -21.04858992269213, 0.0145283357739639, -0.383528029997166, 5.024756419629281, 
  -21.3116407623462, 0.0169808724612109, -0.4213947811407495, 5.14707730946634, 
  -20.98843290349598, 0.0148789762879484, -0.3899000020775837, 
  5.057991325995754, -21.31692265403467, 0.01565456280290651, 
  -0.3970034291306931, 5.013236586454509, -20.99392895895971, 
  0.01296578202919729, -0.3519684323329953, 4.822758472674407, 
  -21.08811432297851, 0.01569174986475092, -0.3976622036380024, 
  5.016575283186727, -20.98330994383061, 0.01303116053854547, 
  -0.3532560987883239, 4.830685712373007, -21.08865831789421, 
  0.01564976090742553, -0.3967946666832905, 5.010736953194427, 
  -20.97325370444261, 0.01298980114827906, -0.3523718224578697, 
  4.824510793839785, -21.07783019050247, 0.01525576474694937, 
  -0.3884891495611182, 4.953205023519265, -20.97904796238208, 
  0.01267535813358889, -0.3454810059891196, 4.774774676148996, 
  -21.09853823353603, 0.01456753290178916, -0.3785770401753118, 
  4.93057723312747, -21.01231867581937, 0.01085086014114835, 
  -0.3101482909769073, 4.566254349936004, -20.6902827671891, 
  0.01467681759465765, -0.3808473668981134, 4.945926599047326, 
  -21.00208489177706, 0.01093039467912244, -0.3118590449750657, 
  4.578221163218529, -20.67339952271788, 0.01395940050896511, 
  -0.3639786191223962, 4.811697476773415, -20.83401706990111, 
  0.01070169986921973, -0.305351608642756, 4.515837542623975, 
  -20.67364826882452, 0.01406058889854737, -0.3654845813086624, 
  4.816038801248066, -20.83028241359874, 0.0109728204651981, 
  -0.3106230993790305, 4.547474715383042, -20.73456396948392, 
  0.01368009747204711, -0.3602732410372249, 4.808133609033227, 
  -20.82057578500958, 0.01002866036132408, -0.2925659511223377, 
  4.444178980310615, -20.49543769849257, 0.01527725433322163, 
  -0.3954738923882106, 5.066945789041241, -21.05656612612584, 
  0.01027879455076008, -0.2997518499276728, 4.511559731426104, 
  -20.28688136201827, 0.01523717569973506, -0.3946319959267101, 
  5.061168635739968, -21.04721566777141, 0.01025644368832084, 
  -0.299264059504511, 4.508091344128196, -20.28307772471366, 
  0.01505393542264995, -0.3891371665568658, 5.006489633109718, 
  -21.01078211186212, 0.01100090752940363, -0.3137723153123342, 
  4.595220274123271, -20.58132631681568, 0.01465547586709522, 
  -0.3800615630878587, 4.937250834746554, -21.03429954309322, 
  0.01107910334069417, -0.3147707871256225, 4.595976649847631, 
  -20.76734114848529, 0.01691885073874782, -0.4205662124036478, 
  5.146291331342784, -21.0213408330088, 0.01462762596851975, 
  -0.3851532147099245, 5.030772397200687, -21.29179995918261, 
  0.01686025392528861, -0.4199651741592044, 5.148184860977974, 
  -21.0553290541375, 0.01455769160330197, -0.3841532732198804, 
  5.029106354112182, -21.31586626821404, 0.01351696755557952, 
  -0.3577584626019509, 4.800793626799199, -20.83815586310553, 
  9.50186560395504e-03, -0.2819734170518634, 4.37792388091592, 
  -20.37317159783034, 0.01335093981280127, -0.3538222946995915, 
  4.769352004417569, -20.83891049907299, 9.273445622443146e-03, 
  -0.2767821742507111, 4.337963513896946, -20.35471429261046, 
  0.01501148481825416, -0.3882491022708718, 5.000423414530844, 
  -21.00000645350501, 0.01096978383658811, -0.3130972932658201, 
  4.590446260980737, -20.57358489359421, 0.01192163869244814, 
  -0.3247683663362911, 4.579715215874304, -20.54232642915055, 
  8.054482303666342e-03, -0.250978442038854, 4.162813938546162, 
  -20.07997945486049, 8.363030026436163e-03, -0.2579224185200268, 
  4.215383865964735, -20.13221262412638, 7.760071215352612e-03, 
  -0.2437844222608636, 4.104879847432589, -20.04564507554509, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 0.01760657628626829, -0.4304953777570332, 
  5.171433654354245, -20.70851690495282, 0.01585911164179833, 
  -0.4076896898876325, 5.150724414473218, -21.18079088923495, 
  0.01588001992613184, -0.4060439402342784, 5.118298763550589, 
  -21.17504881352188, 0.01288121749301989, -0.35209371103778, 4.842873405460844, 
  -21.13249121167742, 0.0163434959606721, -0.3896034597849553, 
  4.755556919062554, -19.04786990093759, 0.01714930170005904, 
  -0.4193740249298994, 5.079981660956779, -20.39992425079854, 
  0.0157968941721422, -0.4043066488078761, 5.106445497008614, 
  -21.15735114172486, 0.01287736740632695, -0.352011012267762, 
  4.842293260763322, -21.14272980716724, 0.01688117230187869, 
  -0.4203943044932184, 5.151047996217336, -21.07857425097072, 
  0.01540244604316402, -0.4000299412317905, 5.118260038419124, 
  -21.59906128000502, 0.01688117230187869, -0.4203943044932184, 
  5.151047996217336, -21.07857425097072, 0.01540244604316402, 
  -0.4000299412317905, 5.118260038419124, -21.59906128000502, 
  0.01703852957402534, -0.422570548362871, 5.154865308987364, 
  -21.01758229234382, 0.01575951047799802, -0.4064818774999775, 
  5.151841132069089, -21.6087374796927, 0.01574685311615049, 
  -0.3989106919562931, 5.026076352137777, -21.03565478755915, 
  0.01453420494055566, -0.3835476929425055, 5.023853461236381, 
  -21.6341430966513, 0.01578242764661091, -0.3995356694876744, 
  5.029183082069982, -21.02459183873777, 0.01459112627329808, -0.38464096305496, 
  5.030309264201109, -21.63229909795308, 0.01574093261694455, 
  -0.3986783593208764, 5.023413707098751, -21.01476504801846, 
  0.0145665411925878, -0.3841179145127167, 5.026674706188076, 
  -21.62791739384924, 0.01535973447690455, -0.390636584010403, 
  4.967649584306926, -21.02451241383447, 0.01422493312440917, 
  -0.3767850990589515, 4.974461106916764, -21.63906214666708, 
  0.01467676751629895, -0.3808610409600129, 4.946167018046522, 
  -21.06085978281515, 0.01249057535953309, -0.3436746881662698, 
  4.783556787288178, -21.2781914535823, 0.01478140165266535, 
  -0.3830340588622503, 4.960851645822259, -21.04921005965081, 
  0.01253799477376633, -0.3446794387088047, 4.790468652689594, 
  -21.25189050320611, 0.01407975500439294, -0.3664823719281961, 
  4.828686421838317, -20.88622527715201, 0.01278188646541126, 
  -0.3481599339070707, 4.797322036079237, -21.4089339850684, 0.0141780274063961, 
  -0.3679250838987307, 4.83257404433265, -20.88147385532833, 
  0.01305070463532767, -0.3533797063743296, 4.828657146938574, 
  -21.46987197269553, 0.01379650064186098, -0.3627084915094139, 
  4.82476709064265, -20.87236939396131, 0.01209772389192219, 
  -0.3353375310300863, 4.726860780458864, -21.24072472639138, 
  0.01534982009449911, -0.3969981380158405, 5.077404738021501, 
  -21.09290880641027, 0.01184185558550073, -0.3316618178275586, 
  4.718575824604034, -20.86153345522619, 0.01531119123256864, 
  -0.3961867511443906, 5.071837317271702, -21.08412653806314, 
  0.0118379172582876, -0.3315767493527291, 4.717976382629526, -20.865125108712, 
  0.01514534927440128, -0.3910494908894213, 5.019552096486889, 
  -21.05353812102275, 0.01271392721690721, -0.3487433982692472, 
  4.822288917213704, -21.19790516113799, 0.01476500762302711, 
  -0.3823505144034736, 4.952862569254614, -21.08278381962584, 
  0.01266369340933575, -0.3470601533100344, 4.804100088631679, 
  -21.33135646701457, 0.01697718765687201, -0.4217612231640242, 
  5.154247965260819, -21.05084241281229, 0.01558235588266508, 
  -0.4032558157603654, 5.134782161806912, -21.60383216617035, 
  0.01691819955131443, -0.4211538855207925, 5.156115769262406, 
  -21.08458066579193, 0.0154012147063823, -0.4000045817102713, 
  5.118089455014276, -21.59212116629673, 0.01363158174614722, 
  -0.3601645515837971, 4.817285477496539, -20.88981308520379, 
  0.01136131419855294, -0.3206175254850773, 4.63398425653482, 
  -21.06277139215852, 0.01347306616112287, -0.356384259170933, 
  4.786894381898156, -20.89282886582811, 0.01150905824124434, 
  -0.3233078451494045, 4.648361529864636, -21.16395965397216, 
  0.0151035180086097, -0.3901744136623569, 5.013574782618472, 
  -21.04303933870799, 0.01269660725754752, -0.3483702320087758, 
  4.819665530074088, -21.19576830137692, 0.01205339748581917, 
  -0.3275370265019095, 4.59871568950305, -20.60033155899706, 
  0.01040371900366351, -0.300291083060665, 4.495046658062785, 
  -20.94746565390849, 0.01026322918584201, -0.2977575199781082, 
  4.481785589408757, -20.85169124554424, 9.822305308031673e-03, 
  -0.2871848771455573, 4.396516654495533, -20.82094984209725, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 0.01710588765803445, -0.4185214377814492, 
  5.074615651936818, -20.40044715641476, 0.01686739719288575, 
  -0.4061568584469081, 4.920505268985612, -19.8861966544423, 
  0.01686739719288575, -0.4061568584469081, 4.920505268985612, 
  -19.8861966544423, 0.01674230521149537, -0.4219070944211832, 
  5.205166733411623, -21.61910092857582, 0.01662324867403157, 
  -0.3995173557156041, 4.860863392113541, -19.67229729535078, 
  0.01681973730557413, -0.4222849865681105, 5.19532275976221, 
  -21.52809913932727, 0.01659138764375247, -0.403539725261698, 
  4.931595140355871, -20.19744085752341, 0.01610942967534678, 
  -0.4108849487404063, 5.151807431290605, -21.7478600053773, 
  0.01659284492113042, -0.4034223932878803, 4.929417866008042, 
  -20.17234075304452, 0.01613739494658133, -0.4113401603103514, 
  5.153642317669504, -21.73553349646459, 0.01657079306136074, 
  -0.4030087914366516, 4.926995261335493, -20.1717483179644, 
  0.01611331174446244, -0.4108365605600366, 5.150204375122306, 
  -21.7316311896997, 0.01631123403463198, -0.3979207653643668, 
  4.894939551539752, -20.26686970743446, 0.01595438138783511, 
  -0.407309629605683, 5.124150817486837, -21.79751274073624, 
  0.01628442815239653, -0.4022916588364721, 4.971587319298069, 
  -20.50443438481888, 0.01501045623303859, -0.3917287418337963, 
  5.060726611401205, -21.74126592430943, 0.01636790014970201, 
  -0.4039177334391068, 4.981679937077699, -20.47349111745215, 
  0.0150494174971965, -0.3925350734626798, 5.066127708508546, 
  -21.71272671341706, 0.01554858297714833, -0.3854948338537349, 
  4.842650454831579, -20.35147085231986, 0.01485336280738093, 
  -0.3867117516328895, 5.008322884748583, -21.71615360307032, 
  0.01575524131183993, -0.3896690154907934, 4.869129225584942, 
  -20.4097902937188, 0.01498465736108607, -0.3889228021488847, 
  5.018001165417521, -21.72579060234563, 0.01558246032173444, 
  -0.3883350300160978, 4.882893944162076, -20.41691392518148, 
  0.01458902686190255, -0.3829955521004599, 5.002696214981887, 
  -21.70113477463009, 0.01730793298234595, -0.4252599178818025, 
  5.144900613348126, -20.5496630623534, 0.01472721091215692, 
  -0.3877716114610152, 5.054331926568067, -21.47670784013793, 
  0.01728371295754675, -0.4247752336983296, 5.141768763445934, 
  -20.54799123632337, 0.01472273860025234, -0.387677273045557, 
  5.053681715311791, -21.48008631565556, 0.01675466402413868, 
  -0.4118340558255106, 5.035088300327921, -20.42777863760426, 
  0.01524857223102958, -0.3970813244362928, 5.101305553582665, 
  -21.6715552349007, 0.01623980325106868, -0.4009351302095472, 
  4.958321088168988, -20.48357492222192, 0.01510759249685759, 
  -0.3934540511816754, 5.069368321858874, -21.76597825319663, 
  0.01674442659558196, -0.4028133172053705, 4.890464715530134, 
  -19.78021801932716, 0.01683439898869156, -0.4231536609302614, 
  5.207079905579347, -21.5892598633637, 0.01687735111337052, 
  -0.4063280889074194, 4.921360513086508, -19.88085441665748, 
  0.01674117908630439, -0.4218836642042741, 5.205007691142644, 
  -21.61233637540469, 0.01555955341676107, -0.3892758425868065, 
  4.902684281980693, -20.50134173189092, 0.0140442852195719, 
  -0.3726026686550747, 4.941942374516739, -21.60130503622473, 
  0.0152520021553395, -0.3825554702016423, 4.853720753846948, 
  -20.48063252587385, 0.01410712824310414, -0.3734489755923832, 
  4.943078414433292, -21.66837752813712, 0.01672510262904794, 
  -0.4112458491188211, 5.03132077218102, -20.42380107096299, 
  0.01522961302839477, -0.396680318040887, 5.098534937182699, 
  -21.66907577991654, 0.01412873035827413, -0.3612422517201538, 
  4.727628707948176, -20.3712230428031, 0.01313823694090464, 
  -0.3537994671355714, 4.81653638387822, -21.51705413650059, 
  0.01456111259076064, -0.3705094439937351, 4.793550867394504, 
  -20.4337659417785, 0.01311528135320901, -0.3538070121003306, 4.82141975124795, 
  -21.466515534795, 0.01303078575248218, -0.3384934051127034, 4.572993382610303, 
  -20.16216617962548, 0.01240191031860557, -0.3375748832235205, 
  4.697249263527992, -21.3411033244789, 0.01307156995060286, 
  -0.3393084509433931, 4.578245086437759, -20.17168933112144, 
  0.01243512690974501, -0.3382789266384888, 4.702125011261338, 
  -21.3507331738665, 0.01001966916034459, -0.2796570331610596, 
  4.211741645433502, -19.55444178812209, 0.01003675286032073, 
  -0.2902090364432299, 4.401058741618202, -20.85357119910126, 
  7.97255872497352e-03, -0.2468298997287708, 4.108015521583708, 
  -20.41689040216084, 0.01135165419793411, -0.3168942949403173, 
  4.572118503038111, -21.15990836147505, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01288121749301991, -0.3520937110377805, 4.842873405460849, 
  -21.15591181814836, 0.01539827047329514, -0.3999429272104598, 
  5.117667512798945, -21.60902896088037, 0.01539827047329514, 
  -0.3999429272104598, 5.117667512798945, -21.60902896088037, 
  0.01674230521149537, -0.4219070944211832, 5.205166733411623, 
  -21.61910092857582, 0.0157592420682677, -0.4064775533001931, 
  5.151820812121546, -21.62029211527487, 0.01681973730557413, 
  -0.4222849865681105, 5.19532275976221, -21.52809913932727, 
  0.01459247013390952, -0.3847875730819502, 5.032471566947562, 
  -21.66683561400893, 0.01610942967534678, -0.4108849487404063, 
  5.151807431290605, -21.7478600053773, 0.0146498767435244, -0.3858909558639092, 
  5.038995717425409, -21.66524905865665, 0.01613739494658133, 
  -0.4113401603103514, 5.153642317669504, -21.73553349646459, 
  0.0146279696885308, -0.3854248406565988, 5.0357564928607, -21.66187221283715, 
  0.01611331174446244, -0.4108365605600366, 5.150204375122306, 
  -21.7316311896997, 0.01431123303464709, -0.3786172144235912, 
  4.987173539155925, -21.68136447160526, 0.01595438138783511, 
  -0.407309629605683, 5.124150817486837, -21.79751274073624, 
  0.01256012699730483, -0.3451689880615074, 4.794041245173406, 
  -21.31566564209724, 0.01501045623303859, -0.3917287418337963, 
  5.060726611401205, -21.74126592430943, 0.01260442994668921, 
  -0.3461066958271966, 4.80048215853795, -21.28838033323995, 0.0150494174971965, 
  -0.3925350734626798, 5.066127708508546, -21.71272671341706, 
  0.01289404370416223, -0.3505578600152829, 4.814068315235926, 
  -21.46172692546076, 0.01485336280738093, -0.3867117516328895, 
  5.008322884748583, -21.71615360307032, 0.01316293216332727, 
  -0.3557773716644241, 4.845385431355327, -21.5226621873287, 
  0.01498465736108607, -0.3889228021488847, 5.018001165417521, 
  -21.72579060234563, 0.01219101470514561, -0.3373476801276094, 
  4.740991778678532, -21.2878713039107, 0.01458902686190255, 
  -0.3829955521004599, 5.002696214981887, -21.70113477463009, 
  0.01184566982750602, -0.3317438797221426, 4.719152083471324, 
  -20.8750902842482, 0.01472721091215692, -0.3877716114610152, 
  5.054331926568067, -21.47670784013793, 0.01184478066500536, 
  -0.3317248772333912, 4.719019426680997, -20.87988609857402, 
  0.01472273860025234, -0.387677273045557, 5.053681715311791, 
  -21.48008631565556, 0.01275429339310055, -0.3496131004217589, 
  4.828402962524238, -21.2251369653744, 0.01524857223102958, 
  -0.3970813244362928, 5.101305553582665, -21.6715552349007, 
  0.01273276591817184, -0.3485435214145448, 4.814502300721918, 
  -21.36852509116998, 0.01510759249685759, -0.3934540511816754, 
  5.069368321858874, -21.76597825319663, 0.01558039119796211, 
  -0.4032156173073612, 5.134513808627252, -21.61468204774324, 
  0.01683439898869156, -0.4231536609302614, 5.207079905579347, 
  -21.5892598633637, 0.0153924930241326, -0.3998215198265233, 5.116833691312079, 
  -21.60043690105063, 0.01674117908630439, -0.4218836642042741, 
  5.205007691142644, -21.61233637540469, 0.01145804780429591, 
  -0.3227051083228849, 4.648687715119386, -21.11138125737872, 
  0.0140442852195719, -0.3726026686550747, 4.941942374516739, 
  -21.60130503622473, 0.01161408988393865, -0.3255730189017468, 
  4.664303032496103, -21.21531825477336, 0.01410712824310414, 
  -0.3734489755923832, 4.943078414433292, -21.66837752813712, 
  0.01273941474605935, -0.3492925360377467, 4.826149384886981, 
  -21.22395665016185, 0.01522961302839477, -0.396680318040887, 
  5.098534937182699, -21.66907577991654, 0.01052285674229961, 
  -0.3028721636284493, 4.513277744933377, -21.00526020538463, 
  0.01313823694090464, -0.3537994671355714, 4.81653638387822, 
  -21.51705413650059, 0.0103735484334881, -0.3001494450079805, 
  4.498696781814106, -20.90641129770185, 0.01311528135320901, 
  -0.3538070121003306, 4.82141975124795, -21.466515534795, 
  9.969374643223004e-03, -0.2903582776239182, 4.418861395294818, 
  -20.88889774425756, 0.01240191031860557, -0.3375748832235205, 
  4.697249263527992, -21.3411033244789, 0.01000101893171803, 
  -0.2910410792840855, 4.423669164297611, -20.89844327019742, 
  0.01243512690974501, -0.3382789266384888, 4.702125011261338, 
  -21.3507331738665, 7.016860699674099e-03, -0.2292195547785312, 
  4.017427735167947, -20.14388321351468, 0.01003675286032073, 
  -0.2902090364432299, 4.401058741618202, -20.85357119910126, 
  7.97255872497352e-03, -0.2468298997287708, 4.108015521583708, 
  -20.41689040216084, 0.01135165419793411, -0.3168942949403173, 
  4.572118503038111, -21.15990836147505, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01631756467654404, -0.414033116419924, 5.161158325871551, 
  -21.70359641549617, 0.01634439380239921, -0.4144600398639275, 
  5.162770076804514, -21.69056842672735, 0.01632122901919951, 
  -0.4139775098518011, 5.159489526540377, -21.68715854279131, 
  0.01601572445798632, -0.4106803458273068, 5.168257243780658, 
  -22.01047968243351, 0.01615779399213687, -0.4103730644248922, 
  5.133037646578759, -21.75471192505852, 0.01602294082172549, 
  -0.4106531075784483, 5.166284727944681, -22.1266610104423, 
  0.01540106062178805, -0.3989102203336593, 5.099530162534026, 
  -21.76871576744849, 0.01487450056211075, -0.3906507310574714, 
  5.071869856917304, -22.00364152738729, 0.01544177497404831, 
  -0.3997557481996902, 5.105221117074619, -21.74025959665826, 
  0.01488685742758009, -0.3908988444460959, 5.073451139995778, 
  -21.96889969464437, 0.01522300802222254, -0.3933752327800575, 
  5.043016362675686, -21.73634912025057, 0.01517398334326853, 
  -0.395079280720266, 5.082843098095297, -22.11894946367369, 
  0.01517026220521717, -0.3917934378200086, 5.026879574889673, 
  -21.68808903256727, 0.01533908721742266, -0.3980271887185856, 
  5.097770432757379, -22.14112156841914, 0.01482176437486334, 
  -0.3869204548599108, 5.019237299662366, -21.67992355256618, 
  0.01456823654480568, -0.3843921719821169, 5.030854213460145, 
  -22.00842143442668, 0.01511227527460539, -0.3948596910896339, 
  5.092442348564516, -21.49524070153327, 0.01371602987516439, 
  -0.367901395434188, 4.932972440771557, -21.43549166489872, 
  0.01510929217415399, -0.3947973003355271, 5.092015956680743, 
  -21.49926276280575, 0.0137407854066876, -0.3684310140396959, 4.93667306944942, 
  -21.44966372522856, 0.0155152990099893, -0.4016538833502662, 
  5.121829562641465, -21.65310157627913, 0.01467472663982604, 
  -0.3867651757985381, 5.048415547457741, -21.79294856938521, 
  0.01551113593798779, -0.4009321073172232, 5.110440955093354, 
  -21.79947384058671, 0.01486581255069661, -0.3902185318801157, 
  5.065965503671412, -21.99429569081382, 0.01690891997668572, 
  -0.4234758005657188, 5.196921944129573, -21.497706800637, 0.01629667987420861, 
  -0.4139997614868224, 5.165267261492297, -21.72902950422945, 
  0.01681675334754149, -0.4222230781250551, 5.194903792410755, 
  -21.52060271920353, 0.01610327227697848, -0.410626625549297, 
  5.148771194442137, -21.71721006198533, 0.01460903781647786, 
  -0.3833803093300482, 5.004968993160857, -21.68343596264339, 
  0.01399960317223971, -0.3733372099889219, 4.964217334103466, 
  -21.89254581719607, 0.01440059776223151, -0.3785970706772644, 
  4.967559040888842, -21.66471153733935, 0.01416677592604204, 
  -0.3764571464557723, 4.981617185135243, -21.99429895924063, 
  0.01549689164441549, -0.4012659397347321, 5.119158390250018, 
  -21.65097622863757, 0.01467960457975287, -0.3868693194409295, 
  5.049141786333871, -21.7991263972357, 0.01344023163000191, 
  -0.3592332714070029, 4.8438167244892, -21.52381412114711, 0.01339009931735353, 
  -0.3607634330627014, 4.881396395709729, -21.90472237083087, 
  0.01345856842270304, -0.3601588860426786, 4.855458951322219, 
  -21.48846659952851, 0.01325891093640167, -0.3584478081376865, 
  4.869971560034326, -21.81894191820759, 0.01265571931595007, 
  -0.341997288317806, 4.717492101996705, -21.33380508992336, 
  0.01298442175981649, -0.3515293548449158, 4.810591111134343, 
  -21.84142552799807, 0.01269113247081354, -0.342745340291868, 4.72265589274408, 
  -21.34400213543302, 0.01301163602221997, -0.3521087229163028, 
  4.814621485024672, -21.84882503112339, 0.01029908369573462, 
  -0.2951250366262684, 4.427181176322393, -20.86714716670655, 
  0.01051698763768758, -0.3020811481007097, 4.500433229974616, 
  -21.33218794296026, 8.009010968614325e-03, -0.2469891670842801, 
  4.101024392225131, -20.35704609093742, 8.564371635675392e-03, 
  -0.2609680002336507, 4.221966228213115, -20.9267206586296, 
  0.01158984784943674, -0.3211991484236988, 4.593248396975961, 
  -21.15978720808426, 0.01182269099306362, -0.3284337248173153, 
  4.66798430438143, -21.62243507134106, 9.730999262788314e-03, 
  -0.2833374182215119, 4.34995715420466, -20.76256811250286, 
  9.923778851540305e-03, -0.2897801120018683, 4.419657321807333, 
  -21.22078683579381, 0.01527264548032303, -0.3609178325200343, 
  4.500525856427368, -18.74125610327233, 0.01577037582027467, 
  -0.375365638584603, 4.63637492846991, -19.34275325959047, 0.01146803987495026, 
  -0.3068819885136018, 4.360027053380294, -17.39576967908494, 
  0.01593749003031078, -0.3653030197101193, 4.442908465618515, 
  -17.11720743910764, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01595164489742914, -0.4095698833796311, 5.162995025729503, 
  -22.02374665049079, 0.01598311725515132, -0.410113311975156, 
  5.165545178142181, -22.01470874349671, 0.0159820145827269, 
  -0.4100901396960503, 5.16538609242864, -22.01882001008513, 
  0.01601633266547773, -0.410693125770408, 5.168344961576573, 
  -22.01522976550617, 0.01599022135531306, -0.4100835325038785, 
  5.163554823872163, -22.13438791576811, 0.01603063756656273, 
  -0.4108148811619908, 5.167395236086185, -22.13375480043435, 
  0.01481442717482215, -0.3894913882275603, 5.064964159452342, 
  -22.00227379099375, 0.01487873092306675, -0.3907403970605332, 
  5.072490608962176, -22.00964240277068, 0.01482600930577567, 
  -0.3897230548148696, 5.066431707867502, -21.96754488421646, 
  0.01489022840617458, -0.3909702157621007, 5.073944711222681, 
  -21.97465025984429, 0.01514018478250725, -0.3944996165340959, 
  5.080168581097283, -22.1264632334752, 0.01519727839397875, 
  -0.3955712795145566, 5.086239027741122, -22.13166509216517, 
  0.01529510801982547, -0.3972086843619449, 5.093231666720938, 
  -22.14371944891217, 0.01536301743667834, -0.3985322171656662, 
  5.101252725834335, -22.15405601329995, 0.01450309487981544, 
  -0.3831223739847637, 5.023159506929177, -22.00442185709249, 
  0.01458814433491049, -0.3848152644218703, 5.033791501411907, 
  -22.02019857979824, 0.01365146169521955, -0.3666335453433235, 
  4.925205383444804, -21.43451134590798, 0.01369363567333147, 
  -0.3674223309751103, 4.929625285570383, -21.43197559767184, 
  0.01367591472477292, -0.3671567931771998, 4.928862344754884, 
  -21.44853673239717, 0.01371971805441188, -0.3679802973278261, 
  4.933523737243133, -21.44664819986167, 0.01461446443193203, 
  -0.3855987779785506, 5.041437939892385, -21.79267474799168, 
  0.01466865159030437, -0.3866355715510447, 5.04751240562092, -21.7953939837, 
  0.01481424371316865, -0.3892471673855556, 5.060432341838808, 
  -21.99612585570184, 0.01487006885229369, -0.3903085731871983, 
  5.066588024271849, -22.0002588820112, 0.01627292678082263, 
  -0.4136427909913852, 5.164187682577004, -21.7433305620409, 
  0.01627372722725371, -0.4135203135606669, 5.161998924667277, 
  -21.72557405541916, 0.0160754638907658, -0.4101745515240257, 
  5.146956418201033, -21.72963555221489, 0.01607785935770985, 
  -0.4100952132537057, 5.145143334427125, -21.71282628434052, 
  0.0139313038604509, -0.3719935821805596, 4.955952447786393, 
  -21.88711348262638, 0.01402089480336386, -0.373790349298819, 
  4.967369082481271, -21.90485649376252, 0.01410049908516376, 
  -0.3751590572441671, 4.973689111033274, -21.9891398573639, 
  0.01419085007383706, -0.376969277419386, 4.985176955297908, 
  -22.00750334488797, 0.01461888833228667, -0.3856932829830225, 
  5.042097353974134, -21.79865874723441, 0.01467473093902715, 
  -0.3867652675478422, 5.048416187012373, -21.80201760547164, 
  0.01332270268817394, -0.3594341874465966, 4.873196014252148, 
  -21.89795311808853, 0.01342600622734553, -0.3615300648847477, 
  4.886742189017027, -21.92245647621407, 0.01318669019718115, 
  -0.3570149303011156, 4.861043456587069, -21.81105235619425, 
  0.01329130818835551, -0.359139917381001, 4.874801655416318, 
  -21.83548152077007, 0.01291897803348244, -0.3502421801740679, 
  4.802683069743455, -21.83435551341546, 0.01303309431441463, 
  -0.3525655495248692, 4.8177993897223, -21.86370683908351, 0.0129460780028684, 
  -0.3508192170742427, 4.806698113002762, -21.84174358810207, 
  0.01305998881166681, -0.35313810544562, 4.821782350893145, -21.87097702390193, 
  0.01044367711760782, -0.3006205007704236, 4.491265994844989, 
  -21.32155226306667, 0.01056560801596857, -0.3031294705581848, 
  4.507809403915225, -21.35556387998243, 8.499656693191956e-03, 
  -0.2596712468945904, 4.213771971591663, -20.91650416846854, 
  8.617572272354755e-03, -0.2621211185979486, 4.230115911459685, 
  -20.95234748846237, 0.0117418612611305, -0.326807713296333, 4.657611869806433, 
  -21.60915765757235, 0.01187091514064451, -0.329467946427266, 
  4.675225198024763, -21.64515192176648, 9.847774375093344e-03, 
  -0.2882451233449156, 4.409833844016154, -21.20789471031181, 
  9.970687146508497e-03, -0.2907956776460614, 4.42682539490418, 
  -21.24392411192571, 0.01579373973517431, -0.375989969658885, 
  4.641900958313141, -19.37312907723967, 0.01577373806712713, 
  -0.3754847007898923, 4.637612554285713, -19.34960549236411, 
  0.01145762838956716, -0.3066867586076895, 4.358885863023379, 
  -17.39384700950846, 0.01594843281577179, -0.3655500438269643, 
  4.444762525094158, -17.12206958158253, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01480513747281931, -0.3890821689861694, 5.059571275676121, 
  -22.09876459070489, 0.01480022373824704, -0.3889625724314376, 
  5.058592664220538, -22.06073440465922, 0.01539322722930236, 
  -0.3995373638104168, 5.111878985332461, -22.30141679610993, 
  0.01369350429996311, -0.3676177634932298, 4.932881804946607, 
  -21.95400749216444, 0.01556591007386917, -0.4026499433540333, 
  5.127980881819353, -22.32609059284281, 0.01367794930032721, 
  -0.3664381471170276, 4.916564513513829, -21.89809013638882, 
  0.01477914419562318, -0.3886984449573772, 5.059034474012889, 
  -22.1942119857203, 0.0128330866412655, -0.3511443656346689, 4.83761258399358, 
  -21.73776270535346, 0.01354381967363177, -0.3640469566205299, 
  4.90439607869089, -21.50952369838063, 0.01158242799898865, 
  -0.3259936560510459, 4.678125412109695, -21.01964855584056, 
  0.01357915991601663, -0.3648026762509718, 4.909673744424057, 
  -21.52739743473447, 0.01160782505435543, -0.3265443084780469, 
  4.682018123315377, -21.0344921543022, 0.01465456285450253, 
  -0.3861565348715275, 5.042449002377392, -21.91179299059758, 
  0.01283381424260811, -0.3512832102082237, 4.839748161282643, 
  -21.48596495542361, 0.01495100202674928, -0.3918367685436288, 
  5.075345959789773, -22.13684020987014, 8.332316827630901e-03, 
  -0.2575066145537243, 4.212199226524742, -20.35381619687988, 
  0.01611270181827697, -0.4099432120284349, 5.135549922176895, 
  -21.79145732389871, 0.01525018797396072, -0.3962181521306015, 
  5.085951228129542, -21.72768357510659, 0.01590945350709765, 
  -0.4063702781323444, 5.117739773652594, -21.77563483897733, 
  0.01500830466324906, -0.3916670072328622, 5.060137570076713, 
  -21.69158301478047, 0.01422030867175356, -0.3778683653621226, 
  4.99409718973852, -22.08300092483206, 8.162266185775943e-03, 
  -0.253447277885137, 4.179975185187246, -20.34446590073874, 0.0144245298294018, 
  -0.3817679663948372, 5.016846367071417, -22.19208668483868, 
  7.718203920074672e-03, -0.2446982514685981, 4.126859824421532, 
  -20.33005164721471, 0.01466787615119987, -0.3864401213290241, 
  5.044422019608938, -21.92089374872754, 0.01284179283994838, 
  -0.351455213249158, 4.840957928893526, -21.49338949812164, 
  0.01376240157615373, -0.3685476698944766, 4.9340617927934, -22.14020743648329, 
  8.723380991920054e-03, -0.2645917252131913, 4.249179559742863, 
  -20.65333066926471, 0.01359206798020799, -0.3654038356308804, 
  4.91693537445579, -22.04568244000531, 0.01127154099825064, 
  -0.3195825016579285, 4.635751786494398, -21.45241729506661, 
  0.01351244597979762, -0.3626099355150451, 4.886082233383708, 
  -22.12432984900289, 0.01135962324224794, -0.3203181412555162, 
  4.629461616359047, -21.59631532047541, 0.01353501037040863, 
  -0.3630901339087307, 4.889421346397936, -22.13010648181022, 
  0.01138264172996685, -0.3208147270505905, 4.632957736969566, 
  -21.60252157234087, 0.01113560983074353, -0.3152346008552353, 
  4.59127426477106, -21.65248182778907, 7.077789071431219e-03, 
  -0.2304172081286294, 4.023065485651308, -20.3806111491696, 
  9.391911450731562e-03, -0.2787390547961144, 4.34605284367189, 
  -21.31826547927421, 5.520066878758906e-03, -0.1972168834919087, 
  3.796092103987291, -20.08417241851153, 0.01240411839661624, 
  -0.3407395029102468, 4.752596394045915, -21.92755926674136, 
  9.926562877129412e-03, -0.291143635798872, 4.442220722602772, 
  -21.27158139894618, 0.01025432553509689, -0.2969984594486486, 
  4.470026406549816, -21.44840427809969, 6.235417971653136e-03, 
  -0.2124737753063577, 3.900502063691334, -20.16945082740605, 
  0.01578124298332921, -0.3759521828791339, 4.643394853161255, 
  -19.5079101685357, 0.016910972066102, -0.4069712886139717, 4.924414496898271, 
  -20.23500954912948, 0.01140084767025297, -0.3099794643511752, 
  4.419043643696589, -17.78874535853305, 8.399950569711405e-03, 
  -0.2461668816896619, 3.977601399290996, -16.67026693949255, 
  0.01691921266417153, -0.3872802452499391, 4.606299960979188, 
  -17.66318071563752, 0.01777935839526863, -0.4113771936936297, 
  4.826044616283593, -18.19512858023234, 0.01603961210296154, 
  -0.3811189800349848, 4.674349892624078, -19.11487907721562, 
  0.01609515151390448, -0.3860159820447161, 4.7428006875827, -19.24959080088679, 
  0.01633448321971819, -0.3898964393316811, 4.760870546039426, 
  -19.85351236954241, 0.01708089940661849, -0.4127340406270751, 
  4.984703551297108, -20.44816838913453, 0.01607978232481002, 
  -0.3854677277501663, 4.73707777882417, -19.25569672269431, 
  -6.151074762620318e-04, -0.06907062101170626, 2.944920714088519, 
  -16.78684517320129, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.0129071989472126, -0.3526025069589023, 4.845968086495925, 
  -21.69520506549429, 0.0129130078136836, -0.3527124441972656, 
  4.846596507900302, -21.65929657789458, 0.01371121921951916, 
  -0.3680103083853024, 4.935755865379036, -21.9950850491248, 
  0.01469386059070252, -0.3871897120345055, 5.051528910902672, 
  -22.3520299052388, 0.01399180271101166, -0.3734665958896157, 
  4.968603958304347, -22.05910204882722, 0.01481782869268358, 
  -0.3893457045067561, 5.061337723691778, -22.36282197588607, 
  0.01284082807371977, -0.3513265335157539, 4.839037590837046, 
  -21.77715916882256, 0.01371504868277477, -0.3683321252967543, 
  4.940325815389857, -22.10672930075794, 0.01153213974837288, 
  -0.3249175943747208, 4.670649271083346, -21.04613200821413, 
  0.01178484553344369, -0.328636921779143, 4.679308174148188, 
  -21.17276423231505, 0.0115588480853983, -0.3254967104825044, 
  4.674743409773395, -21.06139645935236, 0.0118358854009464, 
  -0.3297342430432085, 4.687012351210739, -21.1967826119355, 
  0.01280709523775494, -0.3507230399853151, 4.835954511096944, 
  -21.51808811108684, 0.01322991466982859, -0.3580649319840436, 
  4.86965618670177, -21.69809382573076, 0.0130815040159177, -0.3560094704088376, 
  4.866626965863816, -21.74585837121248, 0.01388784107777989, 
  -0.3714779847987392, 4.956983803257557, -22.04603866991803, 
  0.01520989712469294, -0.3953809748116318, 5.080312410130861, 
  -21.75589966229809, 0.01504769863066053, -0.39024191051882, 5.026992186498119, 
  -21.73019080167252, 0.01496753069381469, -0.3908223395111904, 
  5.054471498679658, -21.71957503465303, 0.01479052376916185, 
  -0.3853904318523127, 4.999245967588068, -21.68759031177982, 
  0.01213853771731605, -0.3373663741580835, 4.751723589380805, -21.61371921836, 
  0.01322386305990654, -0.358761714259965, 4.882998727195615, 
  -22.01105791797579, 0.01239475606913206, -0.342385450424767, 
  4.782396889777488, -21.74395956639799, 0.01352805822184964, 
  -0.3648368612179175, 4.921287158304575, -22.15461914625114, 
  0.01281592014276559, -0.3509133088489511, 4.837292876574488, 
  -21.52576961760474, 0.01325825453873147, -0.3586712444714187, 
  4.873893818609107, -21.71283777405603, 0.01156202239252628, 
  -0.3253638412196633, 4.671943138379604, -21.62879731981003, 
  0.01280818298186296, -0.35043500856869, 4.830362429995105, -22.08771706674409, 
  0.01129220267017111, -0.3200455207830446, 4.639159780730475, 
  -21.49477877571404, 0.01273453951922564, -0.3492886535144273, 
  4.827050170956702, -22.02643619918416, 0.01142122852685837, 
  -0.3216634472865325, 4.639079390149321, -21.64945257256942, 
  0.01295852097271474, -0.3528710598484611, 4.839836544718841, 
  -22.20286606978248, 0.01144330883749053, -0.322139795100665, 
  4.642433072985832, -21.65535084076689, 0.01297388863833359, 
  -0.3532006762557837, 4.842144784979681, -22.20609612391675, 
  8.40554679730182e-03, -0.2596958491345852, 4.234979899286128, 
  -20.91098301034217, 0.01034221433116855, -0.3002134861024592, 
  4.506672972664632, -21.64614698539305, 6.645815968508575e-03, 
  -0.2222266611070862, 3.97875902115508, -20.54779638557169, 
  8.73040538394605e-03, -0.2662799700141617, 4.277411740302305, 
  -21.34568249879693, 9.990601930683726e-03, -0.2925553853609154, 
  4.452381320506224, -21.32570615297223, 0.01156900910393027, 
  -0.3251732140178017, 4.666716637948292, -21.92112997877132, 
  7.791034824294957e-03, -0.2467220070156517, 4.147858653395105, 
  -20.78104645145498, 9.509356882950846e-03, -0.2828443746006495, 
  4.390268302748985, -21.4520471673592, 0.0164892110529967, -0.3958232691672659, 
  4.826476513692718, -19.99339378045367, 0.01608185458721668, 
  -0.3859197131421375, 4.745355588206677, -19.92377579172488, 
  7.78447959864281e-03, -0.2341087316803336, 3.902080167835877, 
  -16.57598756234416, 8.011470068852437e-03, -0.2415430466201732, 
  3.973831801307318, -16.93372788262581, 0.01737679963372699, 
  -0.4010638546024475, 4.738167991958075, -17.99576756941306, 
  0.01718110227794977, -0.3963181186575399, 4.699435554499391, 
  -18.02466946395959, 0.0161278365874757, -0.38704058420555, 4.752778748434771, 
  -19.33023413824901, 0.01700835399822671, -0.4059536173467931, 
  4.88557065007758, -19.78869407042372, 0.0165164669441436, -0.3984440263757634, 
  4.863709773959997, -20.15078757338976, 0.01640651374098501, 
  -0.3950405850590485, 4.829329979440616, -20.19671640016324, 
  0.01695810061222789, -0.4046275158932987, 4.874093647969457, 
  -19.78168801790867, 5.171727807838482e-03, -0.1877606466846136, 
  3.710932601008784, -18.47544139195373, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01401859204880436, -0.3742802750063978, 4.97662002801158, 
  -22.17894371784944, 0.01205626033406976, -0.3338956987442194, 
  4.710694508986877, -21.23333790140611, 0.012107752837183, -0.3350018471928192, 
  4.718453000589603, -21.25749930132479, 0.01048477734169958, 
  -0.3042470952766571, 4.543521985895611, -20.47164786558099, 
  0.01351582624015658, -0.3636415236479408, 4.903406512229714, 
  -21.7646998519991, 0.01149123471931724, -0.3244074648937079, 
  4.670441743898579, -20.86809362448194, 0.01368613281363613, 
  -0.3664342518836665, 4.914180112547993, -21.92991973618313, 
  0.01176005422014436, -0.3295261361379546, 4.70021351088653, 
  -21.12185179245987, 0.01517765614506637, -0.392403980528673, 
  5.036174650903287, -21.73840631145334, 0.01485321640283626, 
  -0.3899528441625967, 5.064144712357756, -21.46658446871364, 
  0.01492224015060327, -0.3876114715068723, 5.009003256893241, 
  -21.69738953652923, 0.01472164618008409, -0.3876541963850187, 
  5.053522438978357, -21.46795659610138, 0.01334892926667927, 
  -0.3606115782895817, 4.888108481301932, -22.00488161615234, 
  0.01032296648378136, -0.2998730143028747, 4.505021844419787, 
  -20.79321634796148, 0.01341268560366949, -0.3616014492874792, 
  4.890897915270699, -22.066530539386, 0.01025417636681035, -0.298074043458799, 
  4.488705497109031, -20.82833725964171, 0.01354480122296711, 
  -0.3642609586722738, 4.907731720211132, -21.77966648081922, 
  0.0114767489668517, -0.3240931956091362, 4.668218468427501, 
  -20.86710051525131, 0.01296287572413026, -0.352914921540839, 
  4.839761529894912, -22.09065900565638, 9.101853779970141e-03, 
  -0.2738366836763602, 4.325315271908968, -20.59027975456669, 
  0.01289529823693713, -0.3522615558205008, 4.842745818655217, 
  -22.05125810717084, 9.238057542432466e-03, -0.2771134616879677, 
  4.352294821858432, -20.58331133628038, 0.01315540495519722, 
  -0.3566722808073316, 4.86182327794692, -22.24344217874679, 
  8.918843367674885e-03, -0.269038841293583, 4.284130608394718, 
  -20.60024814286594, 0.01317124322455468, -0.3570109397496218, 
  4.864189188655919, -22.24677662614406, 8.949167319116186e-03, 
  -0.2696996922252743, 4.288821143530779, -20.6095238167079, 
  0.01048595810068052, -0.3027587333604806, 4.518634711610763, 
  -21.66016128461773, 5.899565751266047e-03, -0.2059715986527821, 
  3.865880056468744, -19.81230120866359, 8.904550810962072e-03, 
  -0.2695986013781469, 4.295694636158657, -21.37630003965605, 
  3.899338261254159e-03, -0.1622356464297488, 3.558899855903361, 
  -19.33286721531426, 0.01198296959075339, -0.3334964182898756, 
  4.719730059830045, -22.0319389092738, 7.033015548495425e-03, 
  -0.2297008034748608, 4.02200503223035, -20.09236100116831, 
  9.901939328207422e-03, -0.2906243733241524, 4.438561283556709, 
  -21.54932493543851, 5.296205504130753e-03, -0.1928721886612774, 
  3.775708954123712, -19.67314228965767, 0.01637731055685545, 
  -0.3919061540207961, 4.784221377640135, -20.00933876896288, 
  0.0167352578074848, -0.4022974182351688, 4.883974869814572, 
  -19.82918613508407, 8.351242551044056e-03, -0.2482424543444974, 
  4.015922239726652, -17.02099331252863, 0.01063936992401773, 
  -0.2907156303998116, 4.265672041668134, -16.96501865580841, 
  0.01679928949004035, -0.3876551538042579, 4.633957194530955, 
  -17.86476036538931, 0.01630393420851265, -0.3776368555066107, 
  4.569324307544011, -17.26772561477097, 0.01694380314825956, 
  -0.4040505586994958, 4.86743662785883, -19.73866589458224, 
  0.01607459310947566, -0.385583228195326, 4.741382450019588, -18.946638085476, 
  0.01633508951262163, -0.3929477038330859, 4.809459276241359, 
  -20.14188954532398, 0.01703899937708034, -0.410976225946881, 
  4.965306337410277, -20.08338166519534, 0.01689186141983643, 
  -0.4026909718821782, 4.855744292355989, -19.73128523156167, 
  0.01608530534649958, -0.385640175409824, 4.740326049603597, 
  -18.96333837519587, 5.095236466191807e-03, -0.1853293097130513, 
  3.686186853221475, -18.40018871539128, 6.54601651270524e-03, 
  -0.2208890213901238, 3.977659309808763, -18.66710358133892, 
  0.01640315632127065, -0.3925608242665184, 4.789779763477605, 
  -20.03209430873462, 0.01676462868195198, -0.4030671499446091, 
  4.890690315648831, -19.85715299854811, 0.01597799041336903, 
  -0.4036194564939151, 5.057087159030743, -21.50004665838649, 
  0.01628236229853582, -0.4148136700381341, 5.181714332518689, 
  -21.4235399028389, 0.01654946717893066, -0.4089530608460207, 
  5.028482240506469, -20.32361999739216, 0.01658997234800819, 
  -0.4092505242587581, 5.025369374436823, -20.30912259559294, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 0.0127873619254748, -0.3504450527565446, 
  4.83535746810319, -21.87260910859988, 0.01091105929198816, 
  -0.3117021589868738, 4.579496047209034, -20.93292619974365, 
  0.01095258947954664, -0.3126028284758665, 4.585865184022668, 
  -20.95403430231611, 0.01048543610727357, -0.30426147128923, 4.543624200544047, 
  -20.4772149448428, 0.0124070294519026, -0.3423715925513445, 4.779735611524035, 
  -21.48906758187726, 0.01150691920159197, -0.3247477599071072, 
  4.672849253437133, -20.87936230867227, 0.01283807007818213, 
  -0.3510419433257984, 4.834289762499563, -21.76921354532639, 
  0.01178655106484367, -0.3301004195157799, 4.704271287126566, 
  -21.13697958605649, 0.01461620652130035, -0.3830831434405831, 
  4.997844481422537, -21.66107199599786, 0.01484943108645787, -0.38987336179305, 
  5.06359915715669, -21.4702697631475, 0.01453319704706102, -0.3818139512320738, 
  4.994528144441701, -21.67442465189245, 0.01471529207134773, 
  -0.387519834816084, 5.052594158145451, -21.47063434827727, 
  0.01207955776033184, -0.3363655476549194, 4.747167454880294, 
  -21.7074970881843, 0.01036186917987102, -0.3007210708942723, 4.51104367469216, 
  -20.8136015788913, 0.01238107613490557, -0.3423642225655055, 
  4.784761334105927, -21.85196791842206, 0.01030104843450563, 
  -0.2990916632328953, 4.495910287089268, -20.85140006937702, 
  0.01243029948702089, -0.3428732694205239, 4.783264742196461, 
  -21.50229720484486, 0.01149358301808147, -0.3244584128639763, 
  4.67080218070347, -20.8788250751728, 0.01169641846846679, -0.3285274827972837, 
  4.696584461820629, -21.79193330667232, 9.156499299719789e-03, 
  -0.2750292380130641, 4.333793176589303, -20.61683841824804, 
  0.01137026959509606, -0.3219926914540852, 4.655225230355685, 
  -21.63904552364831, 9.28320758911098e-03, -0.2781036243452712, 
  4.359358568309225, -20.60659326378028, 0.01175645225394474, 
  -0.3291630416065938, 4.694341764783904, -21.88600618384186, 
  8.982371834048288e-03, -0.2704233179870269, 4.293957236835906, 
  -20.63026607947388, 0.0117726889825582, -0.3295134563078876, 4.69680998000667, 
  -21.88959938825575, 9.012559593933843e-03, -0.2710811984210939, 
  4.298626688476297, -20.63946936725151, 8.707377441878454e-03, 
  -0.2665965442956718, 4.286553272852778, -21.14638392689395, 
  5.949281901567558e-03, -0.2070812279068192, 3.8739049963383, 
  -19.83901262637547, 7.349690083970815e-03, -0.2377996450321783, 
  4.091800072581202, -20.92931129135824, 3.949229560185013e-03, 
  -0.1633626562306162, 3.567123872519661, -19.36061251689363, 
  0.01030596825949897, -0.2996971291016758, 4.505443588667098, 
  -21.56091487132657, 7.094077853112561e-03, -0.2310428425681988, 
  4.03159996207211, -20.12227835498591, 8.096753510863173e-03, 
  -0.253795204019746, 4.201224488681996, -21.02397325345216, 
  5.341178164710743e-03, -0.1938852311049277, 3.783083069845677, 
  -19.69862006883372, 0.01643827481913559, -0.3958538371484689, 
  4.836304218105864, -20.11762957067375, 0.01672734530589432, 
  -0.4021651169584858, 4.883353629675837, -19.83241828540801, 
  6.828010971768527e-03, -0.215411678548531, 3.785525838001176, 
  -16.39864956948779, 0.01062428305670706, -0.2904123917558677, 
  4.263703373407284, -16.96107878552007, 0.01796178375858354, 
  -0.4144728291438168, 4.840450370577194, -18.30237990106014, 
  0.01631260176790126, -0.3778351256534287, 4.570832962789371, 
  -17.27191025959687, 0.01626143673540029, -0.391385744429972, 
  4.796132572935058, -19.53270038203646, 0.01607085780667344, 
  -0.3855626972402351, 4.741740446564701, -18.95133324725129, 
  0.01637712675127979, -0.3965964415546734, 4.860445281870467, 
  -20.24919350581264, 0.01702848721507976, -0.4107832548186515, 
  4.964215518847868, -20.08575942442786, 0.01624654780295389, 
  -0.3908416368743579, 4.790386310712458, -19.53963127167953, 
  0.01608159837671767, -0.3856208097765868, 4.740696863142738, 
  -18.96819797494949, 5.175169857236185e-03, -0.1886805942511676, 
  3.72971844126609, -18.47890803956224, 6.508536648904388e-03, 
  -0.2200504141295664, 3.971581073671179, -18.65565190976963, 
  0.0164537475781556, -0.3962894708520976, 4.840341543110246, 
  -20.13723136987955, 0.01675667895603538, -0.4029337042991554, 
  4.890057996706648, -19.86035208119481, 0.01568594779720081, 
  -0.400396935600054, 5.063723473465418, -21.52526332132286, 
  0.01627712597076018, -0.4147052517260942, 5.180981947179995, 
  -21.42701453356242, 0.01652163227336141, -0.4083954244396528, 
  5.024876180879132, -20.31858219356591, 0.01656229401346591, 
  -0.4086970651323669, 5.021799970187462, -20.30431485691243, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 0.01280934751822988, -0.3505424476933, 
  4.83192491957686, -21.51436409221593, 0.01531995328024282, -0.398047746973874, 
  5.102166890866969, -21.64118251259229, 0.01522166615263354, 
  -0.3965122260571911, 5.097373512099812, -21.65522890026581, 
  0.01683226989341609, -0.4231093713846306, 5.206779398160013, 
  -21.58210171554952, 0.01186611091146031, -0.3317424568390267, 
  4.715105817124138, -21.37605057346099, 0.01434097050443556, 
  -0.3782903744258014, 4.975480145165544, -21.64800694495557, 
  0.01188685732999147, -0.3318255090083249, 4.711704463170424, 
  -21.43514472080844, 0.01439771449178039, -0.3789965098591886, 
  4.975538583321914, -21.71289506378402, 0.01264055850917541, -0.34753502076487, 
  4.817245322953193, -21.31264748054528, 0.01530068840466548, 
  -0.3976413474887236, 5.099365219154445, -21.63869981423101, 
  0.01089403135745277, -0.3112514305400017, 4.575540389021787, 
  -21.26294301769499, 0.01315802457345065, -0.3538110278735542, 
  4.81172474380614, -21.47987734380212, 0.01067970033472444, 
  -0.3071314569638384, 4.551165637401398, -21.14254984506995, 
  0.01344571344358933, -0.3602897976732755, 4.86114058198225, 
  -21.53002864327192, 0.01055966464327755, -0.3034479704989236, 
  4.514287554078465, -21.22554184568816, 0.01271212918401676, 
  -0.3435751015223251, 4.733179984052045, -21.39648417001904, 
  0.01058795975828025, -0.304058827557806, 4.518591545597623, 
  -21.23368259823698, 0.01274521979626246, -0.3442758797002746, 
  4.738027676100936, -21.40601051182227, 7.80721787082933e-03, 
  -0.2466204921342596, 4.143356221689548, -20.55765176514059, 
  9.983464531220961e-03, -0.2888449878820689, 4.387914299160339, 
  -20.80190276752982, 5.956466641929815e-03, -0.2068942593837328, 
  3.869733116221408, -20.16168202237343, 7.727064175620645e-03, 
  -0.2414125201154272, 4.066620434569979, -20.30146777859778, 
  9.099971994661294e-03, -0.273523378606105, 4.320621406538567, 
  -20.88319334833936, 0.01128679352072182, -0.3152374525037412, 
  4.556591824013735, -21.10174522622492, 6.837365786910248e-03, 
  -0.2260816642988267, 4.003313555320942, -20.30795060303431, 
  9.353336746149965e-03, -0.2756975544016197, 4.300829024274102, 
  -20.67325278176483, 0.01659615939703046, -0.3979260704489699, 
  4.839999869239998, -19.83692930572109, 0.01543585897456768, 
  -0.3649481063902126, 4.533828719618016, -18.8510280804513, 
  9.905462382935677e-03, -0.275984191637148, 4.167632425945081, 
  -16.89846009094116, 0.01370400448537074, -0.3494404035063852, 
  4.612834197590581, -17.70627871142884, 0.01637076994078888, 
  -0.3783328949748113, 4.567601518699476, -17.38028145810659, 
  0.01393303820800295, -0.319447858690007, 4.09358631549345, -16.10507625034313, 
  0.01608801104881464, -0.3851936535241047, 4.731582103509045, 
  -19.05689657669705, 0.01519590490766243, -0.3579413118253633, 
  4.466412522374004, -18.19200606645746, 0.01671536378310315, 
  -0.402584945115586, 4.892223110072403, -20.02652099805963, 
  0.01559758148692304, -0.3702061165393553, 4.587382172503484, 
  -19.0302662456236, 0.01607611213382641, -0.3847448010956315, 
  4.726774331715202, -19.0653452278504, 0.01512532717633623, 
  -0.3562412988500165, 4.452810809890872, -18.17845909874614, 
  6.873813174460339e-03, -0.2264036885495892, 4.001864929378166, 
  -18.83631383963951, 0.01096905924887359, -0.309934451908228, 
  4.537002079630077, -19.82848909064755, 0.01661540099251793, 
  -0.3984591955040059, 4.844868578275502, -19.8595981250605, 
  0.01546103058644638, -0.3655957934698482, 4.539390058089476, 
  -18.87481833564339, 0.0164712032162758, -0.4168639175669602, 
  5.176778499453105, -21.50769819320384, 0.01762938460689896, 
  -0.4332900978432204, 5.212833055457246, -21.26515212328077, 
  0.01607223949261417, -0.3973644514487358, 4.933126212083768, 
  -20.19520167619675, 0.01634037855186648, -0.3941968599810912, 
  4.829316163494584, -19.67004000885303, 0.01608867446800262, 
  -0.3971070037186536, 4.925795951472638, -20.17196867484774, 
  0.01634895342747149, -0.3938110600030056, 4.821539014291872, 
  -19.64592014348902, 0.01673090969668389, -0.4028498029330532, 
  4.893519312026707, -20.03791750065399, 0.01559318932636509, 
  -0.3700679002736095, 4.586034401609016, -19.03491361653857, 
  0.01674545604349204, -0.4030970998312357, 4.894724080394789, 
  -20.04877822325141, 0.01558906128892755, -0.3699395455724268, 
  4.584791759316031, -19.03951536348421, 0.01436170865164514, 
  -0.380092948868388, 5.001970257312586, -21.22397392013534, 0.0174966747450147, 
  -0.4309350272689174, 5.200656712080669, -21.29206306609996, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 8.605271830446973e-03, -0.2629869206871841, 
  4.246722809823276, -20.46929586179215, 0.01531619329541724, 
  -0.3973241910920178, 5.090678071916866, -21.78525489112996, 
  0.01506506643596584, -0.3925564897196345, 5.06317793794419, 
  -21.74449846768547, 0.01674230521149547, -0.4219070944211853, 
  5.205166733411637, -21.60636091008939, 8.394769760822743e-03, 
  -0.2581873972374855, 4.210420771204531, -20.45256208533953, 
  0.01398570295678793, -0.3713609724902803, 4.933341675029074, 
  -21.57353001825569, 8.025581447205388e-03, -0.2509771253172272, 
  4.167646810339146, -20.45855743442047, 0.01404427996975667, 
  -0.3721176435599579, 4.933864288935166, -21.63926872826413, 
  0.01281869180147589, -0.3507433394279437, 4.833335256089236, 
  -21.52216669351612, 0.01520134149838065, -0.3960823020664198, 
  5.094402848126905, -21.65223929697059, 8.799069373242242e-03, 
  -0.2661078864049683, 4.257905575124576, -20.70901926195877, 
  0.01306699941370651, -0.3522852506155637, 4.806024423797285, 
  -21.48438707590509, 0.01153169391486101, -0.324910175227422, 
  4.670579521399336, -21.56975221604749, 0.01304830823767669, 
  -0.3523825183852983, 4.811521691334361, -21.43525520938164, 
  0.01165027102296562, -0.3262586429449588, 4.668244906330951, 
  -21.71645006336385, 0.01231817861653588, -0.335800132008158, 
  4.684958430567551, -21.30404129045254, 0.01167191319536227, 
  -0.3267252854531928, 4.671528171851457, -21.72220152637088, 
  0.01235140166887913, -0.3365043197555684, 4.689835210721484, 
  -21.31369973027573, 7.498002023152292e-03, -0.2392744991250167, 
  4.083441258574346, -20.55188389328137, 9.961890528636717e-03, 
  -0.2886032122279371, 4.389814398656311, -20.81796943305125, 
  5.923108405779112e-03, -0.2058042559626938, 3.855000123171822, 
  -20.24777138629545, 7.894729585396507e-03, -0.2451527122315875, 
  4.09622423301302, -20.37947074418929, 0.01024370645205536, 
  -0.2977249588453019, 4.48601679925715, -21.40368568515291, 
  0.01127365239907741, -0.315229353321652, 4.560515317489623, 
  -21.12392934694349, 6.663827059359411e-03, -0.2215137189593988, 
  3.962121697318176, -20.34201387571365, 8.953196078382342e-03, 
  -0.2676341675027712, 4.2494616228763, -20.56909133417538, 0.0168274314365138, 
  -0.4048347232945987, 4.906118864990595, -20.2453608319957, 
  0.01555876789606573, -0.3680932681679033, 4.560714680331717, 
  -18.93754050181717, 7.692843507506922e-03, -0.2322071854018039, 
  3.888995025827544, -16.57057952777258, 0.01355600649837461, 
  -0.3474125134137284, 4.608493434190811, -17.74808151545601, 
  0.01809424996511365, -0.4183399167889328, 4.876997993958335, 
  -18.38985465192316, 0.01429839759079891, -0.3278054498990226, 
  4.157270990088332, -16.2866867858833, 0.01609332646403691, 
  -0.3860489589904988, 4.743462893886107, -19.32346295706456, 
  0.01535432888277651, -0.3618889515127398, 4.499210130735202, 
  -18.29809533185839, 0.01699906284095335, -0.410634707852065, 
  4.966673740301648, -20.46001479185745, 0.01571302332897862, 
  -0.3732196570415779, 4.613589096193557, -19.11547202903997, 
  0.01607513138022208, -0.3854217937003934, 4.737026649610084, 
  -19.32735754972278, 0.01528227261378342, -0.3601509948325189, 
  4.485288323663527, -18.28335656034938, -1.29399514777586e-03, 
  -0.05422945239460161, 2.835115964603641, -16.58054215154629, 
  0.01065988648758065, -0.3038362401127417, 4.49940261377321, 
  -19.77505054612377, 0.0168907093712278, -0.4064903834146957, 
  4.920543736756825, -20.29447368723757, 0.01558501103064054, 
  -0.3687620688619545, 4.56641236902988, -18.96155358449073, 
  0.01611299313109767, -0.4105711629940699, 5.145342441341705, 
  -21.67774083294698, 0.01756313860765838, -0.4325825370880521, 
  5.214455376294027, -21.29601737606882, 0.01562173970042349, 
  -0.387604903948404, 4.862724854697895, -20.22294397856519, 
  0.01644370083598173, -0.3970708855949487, 4.855594773290012, 
  -19.76219395790609, 0.01614004278988702, -0.4008015242580149, 
  4.975280061004331, -20.55594366880159, 0.0163910800044819, 
  -0.3953422436186508, 4.838028521422308, -19.71415942482404, 
  0.01646336132536909, -0.396822471224794, 4.847934729925114, -20.1302262415562, 
  0.01570900416403364, -0.3730922527179288, 4.61234185651608, 
  -19.12021632501049, 0.01648089011479912, -0.3971152368681969, 
  4.849303999431109, -20.14116083019069, 0.01570522008188808, 
  -0.3729741643410602, 4.611196507352513, -19.12491428746283, 
  0.01411313797298908, -0.3753646887154276, 4.974569694664378, 
  -21.18976311457301, 0.01744095772987928, -0.4304261469600382, 
  5.203445373654941, -21.3262799468548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  7.947040792685692e-03, -0.249174845965495, 4.153775056636265, 
  -20.50521303549506, 0.01188840230000811, -0.3322251720249733, 
  4.718513832348246, -21.3890547933544, 8.850749819008212e-03, 
  -0.2678977547849458, 4.277962528880638, -20.87143548731222, 
  0.01093135653377074, -0.3120604813854875, 4.581258712798037, 
  -21.28169589178179, 0.01075434671708761, -0.3096302240180674, 
  4.577383866284511, -21.49456984470245, 0.01071331477800307, 
  -0.3078606710201294, 4.556324602156696, -21.15999435563529, 
  0.0111926143095823, -0.3179134415412591, 4.624353130452604, 
  -21.76055445571411, 0.01061032885165138, -0.3045417484389923, 
  4.521994120896152, -21.24917407752507, 0.01120758093543565, 
  -0.3182380043477042, 4.626648305551392, -21.76374931370119, 
  0.01063833961301913, -0.305146465215784, 4.526254848319621, 
  -21.25719385752976, 7.038038100984798e-03, -0.2307219726291547, 
  4.036206332039401, -20.58961344061545, 7.847937055862104e-03, 
  -0.2475195879211052, 4.149803572081505, -20.57912657139357, 
  5.671090866651304e-03, -0.2015814845078087, 3.837515581958132, 
  -20.3587026327607, 5.999306254876891e-03, -0.2078490635466058, 
  3.876629409730207, -20.18469663810859, 9.701624849407632e-03, 
  -0.2874680274871246, 4.427709521673705, -21.41580339708614, 
  9.147190742403803e-03, -0.2745529909758708, 4.327934656350236, 
  -20.90629786378334, 6.318736395658258e-03, -0.2154223908434917, 
  3.932208007258693, -20.42258087723137, 6.879898429594197e-03, 
  -0.2270226569810402, 4.01007456754116, -20.33039076587325, 
  0.01659012153961213, -0.4018937060421436, 4.904489669727914, 
  -20.35261077129279, 0.01659152805552844, -0.3978697462632563, 
  4.839962785378008, -19.84074198394356, 5.915882127232079e-03, 
  -0.1959411038650129, 3.65120646590983, -16.09911726340144, 
  9.892129552972419e-03, -0.2757202520214445, 4.165954410812983, 
  -16.8951678389679, 0.01891563877682642, -0.4375526894782177, 
  5.026748581440506, -18.80001171510612, 0.01637890165732786, 
  -0.3785190356820617, 4.569019033392058, -17.38412542907474, 
  0.01652960612588926, -0.3985101178183235, 4.858765545226605, 
  -19.71220350741126, 0.01609147733499475, -0.3853248141690443, 
  4.732989008802232, -19.06333388486743, 0.01681599066523259, 
  -0.4090121678589246, 4.97553229512143, -20.59838497027611, 
  0.01670602679187113, -0.4024256210015395, 4.891440817692603, 
  -20.02883440190177, 0.01651927687718883, -0.3980618202722723, 
  4.853682960734621, -19.72069906906984, 0.01607968136083972, 
  -0.3848792122124652, 4.72821291303906, -19.07197457439526, 
  -7.650427735468065e-04, -0.06308880725590597, 2.878288100351326, 
  -16.67244050334723, 6.833301354873819e-03, -0.2255071240823108, 
  3.995422536679198, -18.82341623626277, 0.01665263019550592, 
  -0.4034804023217772, 4.917963419380706, -20.39813213279084, 
  0.01661066610896151, -0.3984003266668015, 4.844810714271246, 
  -19.86335572932865, 0.01528289478966295, -0.3944954706126736, 
  5.048620198515303, -21.57550528631274, 0.01645140599981373, 
  -0.4164523792084441, 5.173987212901053, -21.50549978646529, 
  0.01513839402961841, -0.3797473240376246, 4.830405065213585, 
  -20.25911927979487, 0.01605019512092484, -0.3969296253837283, 
  4.930374331195943, -20.19150088130727, 0.01559038452240454, 
  -0.3912034235144988, 4.927038876899984, -20.54346399030194, 
  0.01606653047500309, -0.3966713187054917, 4.923048949350731, 
  -20.16840586539783, 0.01656791950579097, -0.4019685004377104, 
  4.910029285242343, -20.40942171356294, 0.0167218811022397, 
  -0.4026960475909036, 4.892767522822812, -20.04034620873857, 
  0.01659334784933157, -0.4024171416859877, 4.91238782109542, 
  -20.42324122085822, 0.01673674765872607, -0.4029491180614063, 
  4.894003836088834, -20.05132221952017, 8.792630238951537e-03, 
  -0.267205585879255, 4.279233996589586, -20.13683559747809, 
  0.01055856472176341, -0.3047024180333743, 4.536624454675118, 
  -20.44211511763972, 0.01489557567344176, -0.385318882505308, 
  4.975423977108989, -21.38106756927525, 0.01599375709074838, 
  -0.4072620267891542, 5.114832057902915, -21.4140262080652, 
  0.01413128275192716, -0.3684919524763171, 4.852323702891524, 
  -20.85840503963358, 0.01562466842968714, -0.3987178024047485, 
  5.048343982818361, -20.99909999481888, 0.01481217285226436, 
  -0.3835755766513421, 4.963529635367723, -21.34236002561557, 
  0.0159342966810554, -0.4060240533620957, 5.106419784346437, -21.3841169433186, 
  0.01501148481825416, -0.3882491022708718, 5.000423414530844, 
  -21.00000645350501, 0.0151035180086097, -0.3901744136623569, 
  5.013574782618472, -21.04303933870799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  7.61045818204461e-03, -0.2426090435630015, 4.114844144861097, 
  -20.51377523696535, 0.01191419955647851, -0.3324155303115428, 
  4.715859702376879, -21.44982789912049, 8.56580264068023e-03, 
  -0.2618390529791907, 4.23578463291788, -20.84465274597877, 
  9.290254565895771e-03, -0.2776115779007388, 4.348164306156173, 
  -21.21576425725288, 0.01112821427497305, -0.3172629854009943, 
  4.627055609428234, -21.66563853671933, 0.01055963722906132, 
  -0.3058628787768842, 4.555421724243629, -21.6448511882232, 
  0.01162793473918026, -0.3268824803560909, 4.68350352982227, 
  -21.94736934117836, 0.0112894148730837, -0.3204776114804723, 
  4.647249548545337, -22.0079528128921, 0.0116411639255453, -0.3271690997050579, 
  4.685528310817607, -21.94995023233291, 0.01129540720693965, 
  -0.3206081492287249, 4.64817574341016, -22.0077606747627, 
  7.325503614081772e-03, -0.2366039657828249, 4.07434588746484, 
  -20.72970947991592, 7.491880904401792e-03, -0.2411552763815807, 
  4.115479837052998, -20.97301956235637, 6.06856532117914e-03, 
  -0.2099912704167403, 3.894425167247691, -20.53838357707792, 
  6.200718696265493e-03, -0.2138365457531756, 3.930615584578552, 
  -20.77171893222735, 9.969840313968649e-03, -0.293020597355009, 
  4.463793483361973, -21.55062535916841, 9.607775144292651e-03, 
  -0.2860530177916924, 4.422953469166029, -21.60179910230358, 
  6.58368923545269e-03, -0.2209114513867377, 3.968258599233085, 
  -20.55841977892705, 6.611873866275699e-03, -0.2225273266506937, 
  3.988414575014551, -20.75265314121977, 0.01689500308348228, 
  -0.4089179625067003, 4.95800170285616, -20.57358151125282, 0.0162336369641139, 
  -0.3956969252264845, 4.872860436777739, -20.49530964758499, 
  4.748535657606066e-03, -0.1725813210855693, 3.500260128823176, 
  -15.8876905168324, 2.321086018580908e-03, -0.1244245592384868, 
  3.193796951800068, -15.3540195687286, 0.01959446800707452, 
  -0.4530087824047507, 5.143778225184334, -19.186710238212, 0.02054203139904574, 
  -0.474521516272946, 5.306010697734096, -19.66974094149979, 
  0.01649772136697698, -0.3981021293562491, 4.857903629692595, -19.8102087643, 
  0.01675318746795728, -0.4065321356960222, 4.942987954057028, 
  -20.17338551118376, 0.0167927156394482, -0.4087671586189743, 
  4.975908490951712, -20.69301267260242, 0.01606239574698725, 
  -0.3940352955452908, 4.879930756259689, -20.59310679081298, 
  0.01648340852379357, -0.3975450380381269, 4.851853266497981, 
  -19.81592066376576, 0.01674435370878059, -0.4060887216301592, 
  4.93771071660823, -20.18165645193199, -2.465557054542645e-03, 
  -0.027335417938783, 2.635181940215198, -16.24319209083475, 
  -9.083427810955231e-04, -0.05695457897238654, 2.807858658486866, 
  -16.61542510757615, 0.01663590309500846, -0.4033910148404958, 
  4.919615076872419, -20.49452405837917, 0.01628089605271806, 
  -0.3968896514405773, 4.882948570985148, -20.53070536647049, 
  0.01518116402349166, -0.3922864181057144, 5.032715571106514, 
  -21.62228513702702, 0.01417391545400967, -0.3713606264305079, 
  4.891257990725285, -21.41862580626591, 0.01496019499222343, 
  -0.3761369008196127, 4.805736011531879, -20.28634636775102, 
  0.01424038542735933, -0.3625097236439974, 4.726305295467876, 
  -20.23888979025148, 0.01545372350729017, -0.3886825375264298, 
  4.912706290388241, -20.60541031901631, 0.01449580653578132, 
  -0.3686375886354051, 4.775742719460637, -20.38775545761276, 
  0.01641877421434524, -0.3985329341822591, 4.883389819402076, 
  -20.42771582998498, 0.01596927771804751, -0.3909524721947351, 
  4.848235465195842, -20.50101163274719, 0.01644489683954627, 
  -0.3989879151999446, 4.88572054421408, -20.44125224397603, 
  0.01600734978010651, -0.3916592596416832, 4.852302761398287, 
  -20.51908791165045, 8.888104917644404e-03, -0.2688176331505522, 
  4.286513902495658, -20.22727366180239, 7.692542558043028e-03, 
  -0.2433800233027589, 4.113028391211607, -19.95339826098176, 
  0.01482993116609763, -0.3834245805118208, 4.957415505800409, 
  -21.40433526310643, 0.01368937971845257, -0.3606808604004074, 
  4.813000310873017, -21.21330424719859, 0.01371968865245442, 
  -0.3596131871866027, 4.788151436555748, -20.78992482260817, 
  0.0125150529740246, -0.3353447980738503, 4.632359780775704, 
  -20.57638382956993, 0.01474162594927425, -0.3815802158929216, 
  4.94484523480073, -21.36420019687973, 0.0135909973891652, -0.3586221219925209, 
  4.798933616240061, -21.16908382597605, 0.01192163869244814, 
  -0.3247683663362911, 4.579715215874304, -20.54232642915055, 
  0.01205339748581917, -0.3275370265019095, 4.59871568950305, 
  -20.60033155899706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01084981947443144, -0.3114781362853984, 4.588469529677142, 
  -21.82185131974854, 0.01085774417212958, -0.311650966057736, 
  4.589697308594812, -21.82237790732158, 7.718357376209185e-03, 
  -0.246995004264964, 4.165883695192275, -21.0509265017405, 
  8.889696809399857e-03, -0.271500337303753, 4.329788260942029, 
  -21.58339569631723, 6.148775002423566e-03, -0.2135510484398964, 
  3.936999586246144, -20.75109527024901, 7.550468625967022e-03, 
  -0.2434266477077077, 4.141431777685372, -21.37658699041365, 
  9.265037529079329e-03, -0.2789546324013732, 4.376427251194501, 
  -21.44174338711727, 0.01041145413653204, -0.3027952143565236, 
  4.535069291777852, -21.95922425687176, 7.076594660311765e-03, 
  -0.2334401587740785, 4.074414989708207, -20.91342062215217, 
  8.35241733497516e-03, -0.2603862089326549, 4.256865578002083, 
  -21.49159309543425, 0.01614998806189257, -0.3930551384740824, 
  4.846722696063112, -20.33057500590423, 0.01571557786292587, 
  -0.383724957832368, 4.779785650552974, -20.36834622678141, 
  3.485807582875432e-03, -0.1476653375085639, 3.343481765699011, 
  -15.57135576048758, 7.358523349177236e-04, -0.09296292417746271, 
  2.992851816074919, -15.05847955211062, 0.01778921026141394, 
  -0.4142228297423126, 4.868154768120996, -18.53238842203232, 
  0.02110851916373922, -0.48644907436745, 5.388112663511953, -19.95983165654846, 
  0.01590087378216396, -0.3874375306948203, 4.801747634123167, 
  -19.7407932963726, 0.01679742199531968, -0.4085109786316845, 
  4.965212372047211, -20.36517100268592, 0.01608175549449248, 
  -0.393634843735802, 4.869873371213337, -20.46465061404162, 
  0.01584316666608613, -0.3889584092129303, 4.839206400832731, 
  -20.60004091208728, 0.01591497560718322, -0.3875151010382588, 
  4.800394075475992, -19.75872143133074, 0.01678366013817895, 
  -0.4079510925850759, 4.959016790576747, -20.37164077639627, 
  3.705439372920352e-03, -0.1569118824011367, 3.513208664832278, 
  -18.12880544871659, 1.333805167061397e-03, -0.1045170529547216, 
  3.132140788445743, -17.42903669811651, 0.01617582008058177, 
  -0.3937150283054604, 4.852371784612038, -20.35383600615533, 
  0.01572289017712602, -0.3839665408384457, 4.782280301718813, 
  -20.38315262554281, 0.014453157101266, -0.3768931859951553, 4.926052735828094, 
  -21.40403562090683, 0.01366634452967965, -0.3590787379953567, 
  4.791074188167006, -21.26537763964078, 0.01453112915269092, 
  -0.3688973953365577, 4.773194615525952, -20.27463495166328, 
  0.01362741736737682, -0.3493829230385579, 4.63308699085619, 
  -20.12741801168555, 0.01461710963839201, -0.3702123375304376, 
  4.777644067762886, -20.28441816164614, 0.01380035242199955, 
  -0.3531035630332883, 4.658411499790721, -20.19628012102704, 
  0.01611981860345594, -0.3943463126490752, 4.874016093245075, 
  -20.48339705877692, 0.01587628500897176, -0.3895402255228874, 
  4.842237185394619, -20.61619369273426, 0.01615674836341249, 
  -0.3950364519200986, 4.878033331581238, -20.50148187321522, 
  0.01590857975314367, -0.3901074226936119, 4.845190398555389, 
  -20.63179006992256, 7.568544579570445e-03, -0.2412069605475337, 
  4.102083291890334, -19.85915058458054, 6.981521070483141e-03, 
  -0.2274679064281359, 3.994879687446543, -19.78005442901442, 
  0.01407963936171151, -0.3692216943317795, 4.875887126685051, 
  -21.29334071030039, 0.01314525264881005, -0.3485094037748444, 
  4.722116818961537, -21.0975826581042, 0.01279282797926146, 
  -0.3416761562392457, 4.680715159180449, -20.61727312477257, 
  0.01133868397725761, -0.3102786598963351, 4.455375173687115, 
  -20.27989702799257, 0.01399109103153052, -0.3673640602654371, 
  4.863165931422377, -21.25211534056185, 0.0130443557661006, 
  -0.3464006693606085, 4.70773381263267, -21.05227731897683, 
  0.01219705450399571, -0.3310117855651382, 4.627192384995978, 
  -20.58271438071151, 0.01115162660224842, -0.3079160310475401, 
  4.457323755136974, -20.36157353159023, 0.01232206832906087, 
  -0.333640855418245, 4.645254856275972, -20.63861804190601, 
  0.01128579960300451, -0.3107321254418866, 4.476617538424279, 
  -20.42062724867827, 8.363030026436163e-03, -0.2579224185200268, 
  4.215383865964735, -20.13221262412638, 7.789994157860272e-03, 
  -0.244436602303829, 4.109508965970142, -20.05516874945112, 
  0.01026322918584201, -0.2977575199781082, 4.481785589408757, 
  -20.85169124554424, 9.854099074491694e-03, -0.2878709133632135, 
  4.401347224985983, -20.8305978591071, 0.01307156995060286, 
  -0.3393084509433931, 4.578245086437759, -20.17168933112144, 
  0.01000101893171803, -0.2910410792840855, 4.423669164297611, 
  -20.89844327019742, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.01176841852656184, -0.3301882913150214, 4.709234406997058, 
  -22.24827733433835, 0.01176825948288279, -0.3301848447775028, 
  4.70921005087524, -22.24568707573804, 8.896587752945847e-03, 
  -0.2716525817776845, 4.330881061856481, -21.58883073936791, 
  5.453970336795302e-03, -0.199673465819771, 3.847966217409089, 
  -20.67214185309926, 7.562486377637551e-03, -0.2436950220637823, 
  4.143374149221589, -21.38431041971199, 3.997266692404934e-03, 
  -0.1689026654328078, 3.638518460273485, -20.41723811346249, 
  0.01041533317757053, -0.3028801345584655, 4.535674241127257, 
  -21.96333252188692, 7.348180399038622e-03, -0.2398566348759379, 
  4.123302662924801, -21.22420448435885, 8.36105586387474e-03, 
  -0.2605785566296658, 4.258254076295645, -21.49786863525549, 
  4.606546879995174e-03, -0.1817349776737973, 3.72517518334388, 
  -20.46348844777324, 0.01570797667641921, -0.3835987255552361, 
  4.779204449693609, -20.36884302637304, 0.01498336147029532, 
  -0.3744437815893104, 4.771905218285898, -20.57611320982896, 
  7.23452106126048e-04, -0.09271521852749207, 2.991258330877321, 
  -15.05520178606029, -5.496134612509556e-03, 0.035836953366181, 
  2.129207306276658, -13.22930823773059, 0.02111538696917221, 
  -0.486607371204671, 5.389327267568694, -19.96297503606925, 
  0.02109950326025132, -0.4921497123297016, 5.479172043416174, 
  -20.34739355273189, 0.01679963743593631, -0.4086015774444273, 
  4.966217037256961, -20.36907137257742, 0.01441760342060429, 
  -0.3632958436444087, 4.697839445107325, -19.94259776861082, 
  0.01583241398194664, -0.3887694753435486, 4.838221900819122, 
  -20.5998153482091, 0.01431893390642452, -0.3622611239543703, 
  4.705352975232477, -20.51201846536094, 0.01678598187439792, 
  -0.4080452152428211, 4.960056810827773, -20.37568572413593, 
  0.01446490755198233, -0.3640783226734743, 4.701403884474021, 
  -19.97334410453519, 1.301621958078831e-03, -0.1038038519167306, 
  3.127009328294562, -17.41775301978725, -1.004823141565147e-03, 
  -0.05139583338241942, 2.753405796286308, -16.65318985374902, 
  0.01571523980481356, -0.383838968057119, 4.781687132191208, 
  -20.38361567085153, 0.01500394407529792, -0.3749865225445256, 
  4.776708960932312, -20.59692371525378, 0.01363001349261062, 
  -0.3583199891399852, 4.785903821723429, -21.25537268234997, 
  0.0113033813411879, -0.3131377087064334, 4.515088062529629, 
  -20.85227631350173, 0.01361172110460082, -0.3490697572433711, 
  4.631074898418928, -20.12388302718789, 0.01181308220086594, 
  -0.3160694135019669, 4.449732265585032, -19.90539684441839, 
  0.01378462317124669, -0.3527927054871092, 4.656439124298586, 
  -20.19293051470902, 0.01197758337830955, -0.3195218445258918, 
  4.473439411181787, -19.97507119688035, 0.01586546812746925, 
  -0.3893502137144688, 4.841247539994202, -20.61599108941098, 
  0.01436486474112124, -0.3628099678950795, 4.705304448596118, 
  -20.5129599555695, 0.01589770836832696, -0.3899165038490723, 
  4.844196504465459, -20.63161133315478, 0.01442189265450988, 
  -0.3639225820662973, 4.712230952957963, -20.53881205330692, 
  6.951368154886307e-03, -0.2268098102312055, 3.990201565091951, 
  -19.77034076174985, 4.778602605078175e-03, -0.1811261054111203, 
  3.689606612568841, -19.2342146473928, 0.0131152340115706, -0.3478820208759255, 
  4.717837657424998, -21.08918244908968, 0.01102465829557074, 
  -0.3072495547370273, 4.474515581921247, -20.72652951339458, 
  0.0113001875813461, -0.3094766847062928, 4.449923336150155, 
  -20.26885359188287, 9.253071444459936e-03, -0.2693080835062721, 
  4.207146824125942, -19.90179158811711, 0.01301462868779806, 
  -0.3457793701170769, 4.70349609644697, -21.043939324699, 0.01092638420275165, 
  -0.305175042723519, 4.460208698676249, -20.68024282030559, 
  0.01111758760890883, -0.3072015968781788, 4.452428962078191, 
  -20.35158906136677, 8.724791075984277e-03, -0.2596400661443384, 
  4.1574278792721, -19.86083949287388, 0.01125125445976685, -0.3100070769954386, 
  4.471650059189763, -20.41051188411544, 8.851258365372844e-03, 
  -0.2623200599668224, 4.175980933828171, -19.91950208988448, 
  7.760071215352612e-03, -0.2437844222608636, 4.104879847432589, 
  -20.04564507554509, 5.040098351524436e-03, -0.1867869379904886, 
  3.727128348747764, -19.33703991525961, 9.822305308031673e-03, 
  -0.2871848771455573, 4.396516654495533, -20.82094984209725, 
  6.897375237980224e-03, -0.2265950837405052, 3.998675380404284, 
  -20.08243297609936, 0.01001966916034459, -0.2796570331610596, 
  4.211741645433502, -19.55444178812209, 7.016860699674099e-03, 
  -0.2292195547785312, 4.017427735167947, -20.14388321351468, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 5.973024017428034e-03, -0.2108683573580779, 
  3.927142074653938, -20.99908370214952, 3.280081805175671e-03, 
  -0.1537883020443286, 3.535601650100264, -20.25514583076888, 
  0.01336386139190688, -0.3433140535074222, 4.58396339405914, 
  -20.42443115826144, 0.01461872278337713, -0.3683698420399465, 
  4.744310943256006, -20.60419159830051, -0.01357626943242583, 
  0.2030134951606286, 1.005259952080528, -10.9809204900768, 
  -7.487768808030028e-03, 0.0782977395923834, 1.835309993911189, 
  -12.61717693319752, 0.02064485105681144, -0.4876873286068847, 
  5.49257715867006, -20.68493458988628, 0.02182640074893506, 
  -0.5095029489372571, 5.617120834987325, -20.75280315931132, 
  0.01330221696384889, -0.345731621209717, 4.627944912716204, 
  -20.12749538130885, 0.01407018648719866, -0.3580060096579848, 
  4.679018948496533, -19.99806193550906, 0.01268863720824975, 
  -0.3316895641928439, 4.527449878782691, -20.40363115908312, 
  0.01380438343960207, -0.3530337685908498, 4.656053395048525, 
  -20.49298415182425, 0.01336536514531809, -0.3468236295448472, 
  4.63344379210652, -20.16273595321535, 0.01412215819141029, 
  -0.3588873971174609, 4.683274402868129, -20.0307061769838, 
  -2.491583318120804e-03, -0.01570541407832532, 2.485181557439895, 
  -16.22976447605183, -1.563015283630051e-03, -0.03829260657669534, 
  2.657280580690201, -16.48600545074611, 0.01337344792117653, 
  -0.3435874940340646, 4.586563113698936, -20.43885584425859, 
  0.01463516631487808, -0.3688154284629163, 4.748366778772635, 
  -20.62304345467366, 8.786676220420096e-03, -0.2608983233666188, 
  4.165465174393151, -20.30628458408168, 0.01020071799023698, 
  -0.2905967205763067, 4.366984694565699, -20.59620439350552, 
  9.272290998988112e-03, -0.2646324154171417, 4.114805592006841, 
  -19.39589607103863, 0.01109466077827235, -0.301458935866332, 
  4.354995234812396, -19.75758348727961, 9.450992778462787e-03, 
  -0.2683290201945103, 4.139651302891211, -19.46764173415758, 
  0.01125769810763588, -0.3049741401472766, 4.380048473932274, 
  -19.8337055543305, 0.01271035758600425, -0.3317696645002797, 
  4.524558344272822, -20.39996717121787, 0.01377208766556857, 
  -0.3517728804072908, 4.642004640228986, -20.45794841091718, 
  0.0127800129987926, -0.3331407127119589, 4.533208518513653, -20.4300802823541, 
  0.01383235707625898, -0.3529545311103585, 4.64941615249595, 
  -20.48517683574475, 2.875817787710058e-03, -0.1390915634903266, 
  3.392314788628434, -18.76545335446581, 3.771791648915913e-03, 
  -0.1593354256851688, 3.537658793660197, -18.94627383632715, 
  8.818749361725792e-03, -0.2616284739536194, 4.171109152061294, 
  -20.27141895401502, 0.01055157534891192, -0.2976863948446647, 
  4.414307764577782, -20.66067506528996, 6.421837587461112e-03, 
  -0.2102478456533477, 3.809473667798646, -19.24199919856372, 
  8.044242436733639e-03, -0.2443474975681098, 4.040709815167565, 
  -19.59628317892967, 8.715863119508825e-03, -0.2594484316713113, 
  4.156019078821227, -20.22271756691278, 0.01045873478984065, 
  -0.2957210035210127, 4.400720141984178, -20.61568153469793, 
  5.954876865438947e-03, -0.2016181344386257, 3.764962487889774, 
  -19.20329047042764, 8.190506175282291e-03, -0.2486054589218684, 
  4.085935488065329, -19.767963882424, 6.088493464966645e-03, 
  -0.2044603035208216, 3.784708617752158, -19.26536000357481, 
  8.309404446941003e-03, -0.2511324362222627, 4.103471741888925, 
  -19.82468066957763, 3.057418617187775e-03, -0.1432166079817914, 
  3.420114566987183, -18.8483010849165, 4.530131755618022e-03, 
  -0.1756140143108863, 3.650077957012465, -19.22386190836884, 
  4.845777609100976e-03, -0.1823936502216813, 3.692539953670058, 
  -19.60592030175957, 6.311364784064633e-03, -0.2140450535876754, 
  3.913530634053647, -19.95495715465808, 5.515982434107229e-03, 
  -0.1882290561832352, 3.611362840684803, -18.50596653097039, 
  8.545982479386741e-03, -0.2499608799977354, 4.018948480084592, 
  -19.21078121022767, 4.966396814821454e-03, -0.1850649857499679, 
  3.711750851984551, -19.66957544109386, 6.420644555834813e-03, 
  -0.21646074749644, 3.930871931204604, -20.01371222682342, 
  7.97255872497352e-03, -0.2468298997287708, 4.108015521583708, 
  -20.41689040216084, 9.029756744617277e-03, -0.2692782223505784, 
  4.260989081813688, -20.60561975194551, 7.97255872497352e-03, 
  -0.2468298997287708, 4.108015521583708, -20.41689040216084, 
  9.029756744617277e-03, -0.2692782223505784, 4.260989081813688, 
  -20.60561975194551, 9.730999262788314e-03, -0.2833374182215119, 
  4.34995715420466, -20.76256811250286, 9.847774375093344e-03, 
  -0.2882451233449156, 4.409833844016154, -21.20789471031181, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0, 0.0, 0.0, 8.747691453028693e-03, -0.2687576780569879, 
  4.313333922168686, -21.56568180753917, 6.734982078984559e-03, 
  -0.2270519133786738, 4.03782491505736, -21.10335123913773, 
  0.01567424604726056, -0.3863792336051579, 4.829893746809508, 
  -20.60781279042643, 8.952984141085928e-03, -0.2056140132469146, 
  3.227487262319823, -14.94334046499896, -2.293211819447536e-03, 
  -0.02982623937276727, 2.566379561797968, -14.15360604257172, 
  0.0166363085769806, -0.3818063877452844, 4.572913371984209, 
  -16.53529915105964, 0.02005243260587897, -0.4669355899237864, 
  5.276743267160139, -19.79422095609425, 5.112587018456543e-03, 
  -0.1168323602167619, 2.541187758342387, -11.86867598382883, 
  0.01573668231032049, -0.388997665315901, 4.856113005575871, 
  -20.22226411401526, 8.372042302695153e-03, -0.1911814097131465, 
  3.108166782030393, -14.17982639082345, 0.01514531606187664, 
  -0.3770737554343602, 4.783225269624663, -20.58667639110196, 
  9.598235058336482e-03, -0.2206511942570476, 3.344373881577649, 
  -15.24046887285127, 0.01575675326185649, -0.3891771313690958, 
  4.855259786243619, -20.24192799552621, 8.312503253669523e-03, 
  -0.1898635251425451, 3.09848596133249, -14.17601421718281, 
  7.797394036588313e-04, -0.09188543048844168, 3.046726256114427, 
  -17.29934035359863, 0.01758604727464278, -0.4304295362550089, 
  5.17369957168572, -20.25516835535822, 0.01569457104813041, 
  -0.3868908548578843, 4.834237870869784, -20.62679798800206, 
  8.983056151270411e-03, -0.2063253891901465, 3.23310045184249, 
  -14.96653390514944, 0.0124598046157112, -0.3358391368415484, 
  4.653242810720694, -21.06850291592727, 0.01392008079713121, 
  -0.3269784013591531, 4.216460263826973, -17.83973401206208, 
  0.01288890700971349, -0.3369046091132352, 4.575390584078559, 
  -20.11052893967014, 0.01149315551059416, -0.2657670290364934, 
  3.702583500697727, -16.09265644181072, 0.01298646821255915, 
  -0.3384971599232282, 4.582047546514962, -20.12818630058102, 
  0.01134524048399774, -0.2622838919866578, 3.675223351377089, 
  -16.02612454164519, 0.01519300807062988, -0.3779744589249024, 
  4.78856028531562, -20.60869712669417, 9.604821200560667e-03, 
  -0.2207979745355817, 3.345459808202456, -15.25026606341815, 
  0.01523967397540808, -0.378855686293205, 4.793779133521404, 
  -20.63005595623214, 9.612818880292084e-03, -0.2209762469007865, 
  3.346779029985822, -15.26029653688613, 5.686543672267622e-03, 
  -0.2002955426766123, 3.815480740260451, -19.45381082019608, 
  0.01698607131441151, -0.4079991453702811, 4.927587197257994, 
  -19.84036859977489, 0.01201467862479413, -0.3267437455246568, 
  4.593439646770259, -20.91338182087432, 0.013893328873576, -0.3264461607063538, 
  4.213166425934452, -17.90611111720985, 0.01036718328201663, 
  -0.2914936768747446, 4.345119646504007, -20.13323947403283, 
  0.01362821275818724, -0.319864362585255, 4.158722432587901, 
  -17.50994846052942, 0.01191298027393054, -0.3246068174114812, 
  4.578775147572286, -20.8668253676645, 0.01388319910867794, 
  -0.3262059737670598, 4.211273971603807, -17.89296428511632, 
  9.885174011656186e-03, -0.282819746694929, 4.30220931702429, 
  -20.10769915591695, 0.01427856139328853, -0.3360629357351927, 
  4.293240034852092, -17.92364401396513, 0.01001788272726114, 
  -0.285619335600125, 4.321498901772411, -20.16743453006136, 
  0.01427881609618307, -0.3360625119648621, 4.293186403250545, 
  -17.9337242423722, 5.951207244256348e-03, -0.2059229524863919, 
  3.852000326714768, -19.55181014647983, 0.01682255101027169, 
  -0.403686762772786, 4.889756270037815, -19.75257306082827, 
  8.471396163139831e-03, -0.2594713103052415, 4.217757642082288, 
  -20.5082576009742, 0.01660121274794556, -0.3969993104630892, 4.82451491655896, 
  -19.68728662102517, 0.01167311504275413, -0.3125629623244416, 
  4.419700906296327, -19.93309715825567, 0.01128695021094038, 
  -0.2617830581131771, 3.678233532235371, -15.93235836546982, 
  8.601348076402341e-03, -0.2623033626836221, 4.237859708636606, 
  -20.57196759323801, 0.01659429885083433, -0.3969350077739764, 
  4.824764368550273, -19.69877250540405, 0.01135165419793411, 
  -0.3168942949403173, 4.572118503038111, -21.15990836147505, 
  0.01556807530462043, -0.3683355160918706, 4.562786474273243, 
  -18.94848949519248, 0.01135165419793411, -0.3168942949403173, 
  4.572118503038111, -21.15990836147505, 0.01556807530462043, 
  -0.3683355160918706, 4.562786474273243, -18.94848949519248, 
  0.01527264548032303, -0.3609178325200343, 4.500525856427368, 
  -18.74125610327233, 0.01579373973517431, -0.375989969658885, 
  4.641900958313141, -19.37312907723967, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
  0.0}; 


__global__ void
__launch_bounds__(416,3)
gpu_diffusion(const double *temperature_array, const double *pressure_array, 
  const double *mass_frac_array, const double *avmolwt_array, const int 
  slice_stride/*NX*NY in number of doubles*/, const int row_stride/*NX in number 
  of doubles*/, const int total_steps/*NZ in number of doubles*/, const int 
  spec_stride/*NX*NY*NZ in number of doubles*/, double *diffusion) 
{
  const int tid = threadIdx.x & 0xf;
  const int wid = threadIdx.x >> 4;
  {
    const int offset = (blockIdx.x*16 + tid);
    temperature_array += offset;
    pressure_array += offset;
    mass_frac_array += offset;
    avmolwt_array += offset;
    diffusion += offset;
  }
  volatile __shared__ double sumxod[52][16];
  volatile __shared__ double mole_frac[52][16];
  double temperature;
  double avmolwt;
  double mole_frac_temp[2];
  double thread_coeffs[14];
  const int thread_offset = wid*224+tid;
#ifdef DYNAMIC
  for (int step = 0; step < total_steps; step++)
#else
  #pragma unroll 1
  for (int step = 0; step < TOTAL_STEPS; step++)
#endif
  {
    asm volatile("ld.global.nc.cg.f64 %0, [%1];" : "=d"(temperature) : 
      "l"(temperature_array) : "memory"); 
    asm volatile("ld.global.nc.cg.f64 %0, [%1];" : "=d"(avmolwt) : 
      "l"(avmolwt_array) : "memory"); 
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(mole_frac_temp[0]) : 
      "l"(mass_frac_array+(wid+0)*spec_stride) : "memory"); 
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(mole_frac_temp[1]) : 
      "l"(mass_frac_array+(wid+26)*spec_stride) : "memory"); 
    temperature *= 120.0;
    double logt = log(temperature);
    asm volatile("bar.sync 0;" : : : "memory");
    sumxod[wid+0][tid] = 0.0;
    sumxod[wid+26][tid] = 0.0;
    {
      mole_frac_temp[0] *= recip_molecular_masses[wid+0] * 1e3 * avmolwt;
      mole_frac[wid+0][tid] = mole_frac_temp[0];
    }
    {
      mole_frac_temp[1] *= recip_molecular_masses[wid+26] * 1e3 * avmolwt;
      mole_frac[wid+26][tid] = mole_frac_temp[1];
    }
    double local_sumxw = 0.0;
    double local_wtm = 0.0;
    asm volatile("bar.sync 0;" : : : "memory");
    double local_fracs[2];
    const int local_wid = wid >> 1;
    const int local_offset = wid & 0x1;
    local_fracs[0] = mole_frac[local_wid*4+0+local_offset][tid];
    local_fracs[1] = mole_frac[local_wid*4+2+local_offset][tid];
    {
      const double local_mass = 
        diffusion_masses[(local_wid*4+0+local_offset)]; 
      local_wtm = __fma_rn(local_fracs[0],local_mass,local_wtm);
      local_fracs[0] = (local_fracs[0] > 9.999999999999999e-21 ? local_fracs[0] 
        : 9.999999999999999e-21); 
      local_sumxw = __fma_rn(local_fracs[0],local_mass,local_sumxw);
    }
    {
      const double local_mass = 
        diffusion_masses[(local_wid*4+2+local_offset)]; 
      local_wtm = __fma_rn(local_fracs[1],local_mass,local_wtm);
      local_fracs[1] = (local_fracs[1] > 9.999999999999999e-21 ? local_fracs[1] 
        : 9.999999999999999e-21); 
      local_sumxw = __fma_rn(local_fracs[1],local_mass,local_sumxw);
    }
    double local_sumxod[2];
    local_sumxod[0] = 0.0;
    local_sumxod[1] = 0.0;
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[0]) : 
      "l"(across_coeffs+thread_offset+0) : "memory");  
    // Starting point 0
    {
      unsigned index = (local_wid*4+1);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      if (((local_offset+0) < 1))
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 1
    {
      unsigned index = (local_wid*4+2);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 2
    {
      unsigned index = (local_wid*4+3);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      if (((local_offset+2) < 3))
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[0]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[0]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[1]) : 
      "l"(across_coeffs+thread_offset+16) : "memory");  
    // Starting point 3
    {
      unsigned index = (local_wid*4+4);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 4
    {
      unsigned index = (local_wid*4+5);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[1]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[1]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[2]) : 
      "l"(across_coeffs+thread_offset+32) : "memory");  
    // Starting point 5
    {
      unsigned index = (local_wid*4+6);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 6
    {
      unsigned index = (local_wid*4+7);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[2]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[2]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[3]) : 
      "l"(across_coeffs+thread_offset+48) : "memory");  
    // Starting point 7
    {
      unsigned index = (local_wid*4+8);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 8
    {
      unsigned index = (local_wid*4+9);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[3]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[3]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[4]) : 
      "l"(across_coeffs+thread_offset+64) : "memory");  
    // Starting point 9
    {
      unsigned index = (local_wid*4+10);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 10
    {
      unsigned index = (local_wid*4+11);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[4]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[4]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[5]) : 
      "l"(across_coeffs+thread_offset+80) : "memory");  
    // Starting point 11
    {
      unsigned index = (local_wid*4+12);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 12
    {
      unsigned index = (local_wid*4+13);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[5]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[5]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[6]) : 
      "l"(across_coeffs+thread_offset+96) : "memory");  
    // Starting point 13
    {
      unsigned index = (local_wid*4+14);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 14
    {
      unsigned index = (local_wid*4+15);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[6]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[6]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[7]) : 
      "l"(across_coeffs+thread_offset+112) : "memory");  
    // Starting point 15
    {
      unsigned index = (local_wid*4+16);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 16
    {
      unsigned index = (local_wid*4+17);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[7]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[7]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[8]) : 
      "l"(across_coeffs+thread_offset+128) : "memory");  
    // Starting point 17
    {
      unsigned index = (local_wid*4+18);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 18
    {
      unsigned index = (local_wid*4+19);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[8]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[8]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[9]) : 
      "l"(across_coeffs+thread_offset+144) : "memory");  
    // Starting point 19
    {
      unsigned index = (local_wid*4+20);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 20
    {
      unsigned index = (local_wid*4+21);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[9]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[9]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[10]) : 
      "l"(across_coeffs+thread_offset+160) : "memory");  
    // Starting point 21
    {
      unsigned index = (local_wid*4+22);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 22
    {
      unsigned index = (local_wid*4+23);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[10]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[10]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[11]) : 
      "l"(across_coeffs+thread_offset+176) : "memory");  
    // Starting point 23
    {
      unsigned index = (local_wid*4+24);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 24
    {
      unsigned index = (local_wid*4+25);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[11]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[11]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[12]) : 
      "l"(across_coeffs+thread_offset+192) : "memory");  
    // Starting point 25
    {
      unsigned index = (local_wid*4+26);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      if (((25 - (0+local_offset)) < (25+((local_wid*4+0+local_offset) < 26 ? 1 
        : 0)))) 
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      if (((25 - (2+local_offset)) < (25+((local_wid*4+2+local_offset) < 26 ? 1 
        : 0)))) 
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    // Starting point 26
    {
      unsigned index = (local_wid*4+27);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+0)
      if (((26 - (0+local_offset)) < (25+((local_wid*4+0+local_offset) < 26 ? 1 
        : 0))) && (1 <= local_offset)) 
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 8, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 8, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 9, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 9, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 10, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 10, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 11, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 11, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[0],val,index_sumxod);
        local_sumxod[0] = __fma_rn(index_clamped,val,local_sumxod[0]);
      }
      // Across point (offset+1)
      if (((26 - (2+local_offset)) < (25+((local_wid*4+2+local_offset) < 26 ? 1 
        : 0)))) 
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 12, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 12, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 13, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 13, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 14, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 14, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[12]), 15, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[12]), 15, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
    }
    asm volatile("ld.global.cg.f64 %0, [%1];" : "=d"(thread_coeffs[13]) : 
      "l"(across_coeffs+thread_offset+208) : "memory");
    // Starting point 27
    {
      unsigned index = (local_wid*4+28);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+1)
      if (((27 - (2+local_offset)) < (25+((local_wid*4+2+local_offset) < 26 ? 1 
        : 0)))) 
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 0, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 0, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 1, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 1, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 2, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 2, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 3, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 3, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    // Starting point 28
    {
      unsigned index = (local_wid*4+29);
      if (index >= 52) index -= 52;
      double index_frac = mole_frac[index][tid];
      double index_sumxod = 0.0;
      double index_clamped = (index_frac > 9.999999999999999e-21 ? index_frac : 
        9.999999999999999e-21); 
      // Across point (offset+1)
      if (((28 - (2+local_offset)) < (25+((local_wid*4+2+local_offset) < 26 ? 1 
        : 0))) && (1 <= local_offset)) 
      {
        int lo_part, hi_part;
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 4, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 4, 16);
        double val = __hiloint2double(hi_part,lo_part);
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 5, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 5, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 6, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 6, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        lo_part = __shfl(__double2loint(thread_coeffs[13]), 7, 16);
        hi_part = __shfl(__double2hiint(thread_coeffs[13]), 7, 16);
        val = __fma_rn(val,logt,__hiloint2double(hi_part,lo_part));
        val = -val;
        val = exp(val);
        index_sumxod = __fma_rn(local_fracs[1],val,index_sumxod);
        local_sumxod[1] = __fma_rn(index_clamped,val,local_sumxod[1]);
      }
      {
        int lo_part, hi_part;
        lo_part = __shfl_down(__double2loint(index_sumxod), 16);
        hi_part = __shfl_down(__double2hiint(index_sumxod), 16);
        index_sumxod += __hiloint2double(hi_part,lo_part);
        if (local_offset==0)
          sumxod[index][tid] += index_sumxod;
      }
      asm volatile("bar.sync 0;" : : : "memory");
    }
    sumxod[local_wid*4+0+local_offset][tid] += local_sumxod[0];
    sumxod[local_wid*4+2+local_offset][tid] += local_sumxod[1];
    asm volatile("bar.sync 0;" : : : "memory");
    double pressure;
    asm volatile("ld.global.nc.cg.f64 %0, [%1];" : "=d"(pressure) : 
      "l"(pressure_array) : "memory"); 
    double output_fracs[2];
    output_fracs[0] = mole_frac[wid+0][tid];
    output_fracs[1] = mole_frac[wid+26][tid];
    asm volatile("bar.sync 0;" : : : "memory");
    {
      int lo_part, hi_part;
      lo_part = __shfl_down(__double2loint(local_sumxw), 16);
      hi_part = __shfl_down(__double2hiint(local_sumxw), 16);
      local_sumxw += __hiloint2double(hi_part,lo_part);
      lo_part = __shfl_down(__double2loint(local_wtm), 16);
      hi_part = __shfl_down(__double2hiint(local_wtm), 16);
      local_wtm += __hiloint2double(hi_part,lo_part);
    }
    if (local_offset==0)
    {
      mole_frac[local_wid][tid] = local_sumxw;
      mole_frac[local_wid+13][tid] = local_wtm;
    }
    asm volatile("bar.sync 0;" : : : "memory");
    double sumxw = 0.0;
    double wtm = 0.0;
    {
      double reduc_sumxw[13];
      double reduc_wtm[13];
      reduc_sumxw[0] = mole_frac[0][tid];
      reduc_wtm[0] = mole_frac[13][tid];
      reduc_sumxw[1] = mole_frac[1][tid];
      reduc_wtm[1] = mole_frac[14][tid];
      reduc_sumxw[2] = mole_frac[2][tid];
      reduc_wtm[2] = mole_frac[15][tid];
      reduc_sumxw[3] = mole_frac[3][tid];
      reduc_wtm[3] = mole_frac[16][tid];
      reduc_sumxw[4] = mole_frac[4][tid];
      reduc_wtm[4] = mole_frac[17][tid];
      reduc_sumxw[5] = mole_frac[5][tid];
      reduc_wtm[5] = mole_frac[18][tid];
      reduc_sumxw[6] = mole_frac[6][tid];
      reduc_wtm[6] = mole_frac[19][tid];
      reduc_sumxw[7] = mole_frac[7][tid];
      reduc_wtm[7] = mole_frac[20][tid];
      reduc_sumxw[8] = mole_frac[8][tid];
      reduc_wtm[8] = mole_frac[21][tid];
      reduc_sumxw[9] = mole_frac[9][tid];
      reduc_wtm[9] = mole_frac[22][tid];
      reduc_sumxw[10] = mole_frac[10][tid];
      reduc_wtm[10] = mole_frac[23][tid];
      reduc_sumxw[11] = mole_frac[11][tid];
      reduc_wtm[11] = mole_frac[24][tid];
      reduc_sumxw[12] = mole_frac[12][tid];
      reduc_wtm[12] = mole_frac[25][tid];
      sumxw += reduc_sumxw[0];
      wtm += reduc_wtm[0];
      sumxw += reduc_sumxw[1];
      wtm += reduc_wtm[1];
      sumxw += reduc_sumxw[2];
      wtm += reduc_wtm[2];
      sumxw += reduc_sumxw[3];
      wtm += reduc_wtm[3];
      sumxw += reduc_sumxw[4];
      wtm += reduc_wtm[4];
      sumxw += reduc_sumxw[5];
      wtm += reduc_wtm[5];
      sumxw += reduc_sumxw[6];
      wtm += reduc_wtm[6];
      sumxw += reduc_sumxw[7];
      wtm += reduc_wtm[7];
      sumxw += reduc_sumxw[8];
      wtm += reduc_wtm[8];
      sumxw += reduc_sumxw[9];
      wtm += reduc_wtm[9];
      sumxw += reduc_sumxw[10];
      wtm += reduc_wtm[10];
      sumxw += reduc_sumxw[11];
      wtm += reduc_wtm[11];
      sumxw += reduc_sumxw[12];
      wtm += reduc_wtm[12];
    }
    pressure *= 1.41836588544e+06;
    double pfac = 1.01325e+06/pressure;
    {
      double clamped = (output_fracs[0] > 9.999999999999999e-21 ? 
        output_fracs[0] : 9.999999999999999e-21); 
      double result = pfac * (sumxw - 
        (diffusion_masses[(wid+0)]*clamped)) / (wtm * 
        sumxod[wid+0][tid]); 
      result *= 6.386577550694006e-05;
      asm volatile("st.global.cs.f64 [%0], %1;" : : 
        "l"(diffusion+(wid+0)*spec_stride), "d"(result) : "memory"); 
    }
    {
      double clamped = (output_fracs[1] > 9.999999999999999e-21 ? 
        output_fracs[1] : 9.999999999999999e-21); 
      double result = pfac * (sumxw - 
        (diffusion_masses[(wid+26)]*clamped)) / (wtm * 
        sumxod[wid+26][tid]); 
      result *= 6.386577550694006e-05;
      asm volatile("st.global.cs.f64 [%0], %1;" : : 
        "l"(diffusion+(wid+26)*spec_stride), "d"(result) : "memory"); 
    }
  }
}

